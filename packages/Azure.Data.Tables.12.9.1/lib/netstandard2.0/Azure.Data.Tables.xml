<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.Data.Tables</name>
    </assembly>
    <members>
        <member name="M:Azure.Data.Tables.AzureSasCredentialSynchronousPolicy.#ctor(Azure.AzureSasCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.AzureSasCredentialSynchronousPolicy" /> class.
            </summary>
            <param name="credential">The <see cref="T:Azure.Data.Tables.AzureSasCredentialSynchronousPolicy" /> used to authenticate requests.</param>
        </member>
        <member name="M:Azure.Data.Tables.AzureSasCredentialSynchronousPolicy.OnSendingRequest(Azure.Core.HttpMessage)">
            <summary>
            Method is invoked before the request is sent.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> containing the request.</param>
        </member>
        <member name="T:Azure.Data.Tables.CosmosPatchTransformPolicy">
            <summary>
            HttpPipelinePolicy to transform PATCH requests into POST requests with the "X-HTTP-Method":"MERGE" header set.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.CosmosPatchTransformPolicy.#ctor">
            <summary>
            Create a new <see cref="T:Azure.Data.Tables.CosmosPatchTransformPolicy" />.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.CosmosPatchTransformPolicy.OnSendingRequest(Azure.Core.HttpMessage)">
            <summary>
            Do the transform, if necessary.
            </summary>
            <param name="message">The message with the request to transform.</param>
        </member>
        <member name="M:Azure.Data.Tables.CosmosPatchTransformPolicy.TransformPatchToCosmosPost(Azure.Core.HttpMessage)">
            <summary>
            Transform a PATCH request into POST request with the "X-HTTP-Method":"MERGE" header set.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Azure.Data.Tables.DictionaryTableExtensions.ToOdataAnnotatedDictionary(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a new Dictionary with the appropriate Odata type annotation for a given propertyName value pair.
            The default case is intentionally unhandled as this means that no type annotation for the specified type is required.
            This is because the type is naturally serialized in a way that the table service can interpret without hints.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.DictionaryTableExtensions.CastAndRemoveAnnotations(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.ValueTuple{System.String,System.String}})">
            <summary>
            Cleans a Dictionary of its Odata type annotations, while using them to cast its entities accordingly.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.DictionaryTableExtensions.ToTableEntityList``1(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.IDictionary{System.String,System.Object}})">
            <summary>
            Converts a List of Dictionaries containing properties and Odata type annotations to a custom entity type.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.DictionaryTableExtensions.ToTableEntity``1(System.Collections.Generic.IDictionary{System.String,System.Object},Azure.Core.TypeBinder{System.Collections.Generic.IDictionary{System.String,System.Object}}.BoundTypeInfo)">
            <summary>
            Cleans a Dictionary of its Odata type annotations, while using them to cast its entities accordingly.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableEntityExtensions.ToOdataAnnotatedDictionary``1(``0)">
            <summary>
            Returns a new Dictionary with the appropriate Odata type annotation for a given propertyName value pair.
            The default case is intentionally unhandled as this means that no type annotation for the specified type is required.
            This is because the type is naturally serialized in a way that the table service can interpret without hints.
            </summary>
        </member>
        <member name="T:Azure.Data.Tables.Models.OdataMetadataFormat">
            <summary> The OdataMetadataFormat. </summary>
            <summary> The OdataMetadataFormat. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.OdataMetadataFormat.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.OdataMetadataFormat" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Data.Tables.Models.OdataMetadataFormat.ApplicationJsonOdataNometadata">
            <summary> application/json;odata=nometadata. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.OdataMetadataFormat.ApplicationJsonOdataMinimalmetadata">
            <summary> application/json;odata=minimalmetadata. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.OdataMetadataFormat.ApplicationJsonOdataFullmetadata">
            <summary> application/json;odata=fullmetadata. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.OdataMetadataFormat.op_Equality(Azure.Data.Tables.Models.OdataMetadataFormat,Azure.Data.Tables.Models.OdataMetadataFormat)">
            <summary> Determines if two <see cref="T:Azure.Data.Tables.Models.OdataMetadataFormat" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.OdataMetadataFormat.op_Inequality(Azure.Data.Tables.Models.OdataMetadataFormat,Azure.Data.Tables.Models.OdataMetadataFormat)">
            <summary> Determines if two <see cref="T:Azure.Data.Tables.Models.OdataMetadataFormat" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.OdataMetadataFormat.op_Implicit(System.String)~Azure.Data.Tables.Models.OdataMetadataFormat">
            <summary> Converts a string to a <see cref="T:Azure.Data.Tables.Models.OdataMetadataFormat" />. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.OdataMetadataFormat.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.OdataMetadataFormat.Equals(Azure.Data.Tables.Models.OdataMetadataFormat)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.OdataMetadataFormat.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.OdataMetadataFormat.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Data.Tables.Models.QueryOptions">
            <summary> Parameter group. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.QueryOptions.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.QueryOptions" />. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.QueryOptions.#ctor(System.Nullable{Azure.Data.Tables.Models.OdataMetadataFormat},System.Nullable{System.Int32},System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.QueryOptions" />. </summary>
            <param name="format"> Specifies the media type for the response. </param>
            <param name="top"> Maximum number of records to return. </param>
            <param name="select"> Select expression using OData notation. Limits the columns on each record to just those requested, e.g. "$select=PolicyAssignmentId, ResourceId". </param>
            <param name="filter"> OData filter expression. </param>
        </member>
        <member name="P:Azure.Data.Tables.Models.QueryOptions.Format">
            <summary> Specifies the media type for the response. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.QueryOptions.Top">
            <summary> Maximum number of records to return. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.QueryOptions.Select">
            <summary> Select expression using OData notation. Limits the columns on each record to just those requested, e.g. "$select=PolicyAssignmentId, ResourceId". </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.QueryOptions.Filter">
            <summary> OData filter expression. </summary>
        </member>
        <member name="T:Azure.Data.Tables.Models.ResponseFormat">
            <summary> The ResponseFormat. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.ResponseFormat.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.ResponseFormat" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Data.Tables.Models.ResponseFormat.ReturnNoContent">
            <summary> return-no-content. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.ResponseFormat.ReturnContent">
            <summary> return-content. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.ResponseFormat.op_Equality(Azure.Data.Tables.Models.ResponseFormat,Azure.Data.Tables.Models.ResponseFormat)">
            <summary> Determines if two <see cref="T:Azure.Data.Tables.Models.ResponseFormat" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.ResponseFormat.op_Inequality(Azure.Data.Tables.Models.ResponseFormat,Azure.Data.Tables.Models.ResponseFormat)">
            <summary> Determines if two <see cref="T:Azure.Data.Tables.Models.ResponseFormat" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.ResponseFormat.op_Implicit(System.String)~Azure.Data.Tables.Models.ResponseFormat">
            <summary> Converts a string to a <see cref="T:Azure.Data.Tables.Models.ResponseFormat" />. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.ResponseFormat.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.ResponseFormat.Equals(Azure.Data.Tables.Models.ResponseFormat)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.ResponseFormat.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.ResponseFormat.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableAccessPolicy">
            <summary> An Access policy. </summary>
            <summary> An Access policy. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableAccessPolicy.#ctor(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableAccessPolicy" />. </summary>
            <param name="startsOn"> The start datetime from which the policy is active. </param>
            <param name="expiresOn"> The datetime that the policy expires. </param>
            <param name="permission"> The permissions for the acl policy. </param>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableAccessPolicy.Permission">
            <summary> The permissions for the acl policy. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableAccessPolicy.StartsOn">
            <summary> The start datetime from which the policy is active. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableAccessPolicy.ExpiresOn">
            <summary> The datetime that the policy expires. </summary>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableAnalyticsLoggingSettings">
            <summary> Azure Analytics Logging settings. </summary>
            <summary> Azure Analytics Logging settings. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableAnalyticsLoggingSettings.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,Azure.Data.Tables.TableRetentionPolicy)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableAnalyticsLoggingSettings" />. </summary>
            <param name="version"> The version of Analytics to configure. </param>
            <param name="delete"> Indicates whether all delete requests should be logged. </param>
            <param name="read"> Indicates whether all read requests should be logged. </param>
            <param name="write"> Indicates whether all write requests should be logged. </param>
            <param name="retentionPolicy"> The retention policy. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="version" /> or <paramref name="retentionPolicy" /> is null. </exception>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableAnalyticsLoggingSettings.Version">
            <summary> The version of Analytics to configure. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableAnalyticsLoggingSettings.Delete">
            <summary> Indicates whether all delete requests should be logged. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableAnalyticsLoggingSettings.Read">
            <summary> Indicates whether all read requests should be logged. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableAnalyticsLoggingSettings.Write">
            <summary> Indicates whether all write requests should be logged. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableAnalyticsLoggingSettings.RetentionPolicy">
            <summary> The retention policy. </summary>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableCorsRule">
            <summary> CORS is an HTTP feature that enables a web application running under one domain to access resources in another domain. Web browsers implement a security restriction known as same-origin policy that prevents a web page from calling APIs in a different domain; CORS provides a secure way to allow one domain (the origin domain) to call APIs in another domain. </summary>
            <summary> CORS is an HTTP feature that enables a web application running under one domain to access resources in another domain. Web browsers implement a security restriction known as same-origin policy that prevents a web page from calling APIs in a different domain; CORS provides a secure way to allow one domain (the origin domain) to call APIs in another domain. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableCorsRule.#ctor(System.String,System.String,System.String,System.String,System.Int32)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableCorsRule" />. </summary>
            <param name="allowedOrigins"> The origin domains that are permitted to make a request against the service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '*' to allow all origin domains to make requests via CORS. </param>
            <param name="allowedMethods"> The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated). </param>
            <param name="allowedHeaders"> The request headers that the origin domain may specify on the CORS request. </param>
            <param name="exposedHeaders"> The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer. </param>
            <param name="maxAgeInSeconds"> The maximum amount time that a browser should cache the preflight OPTIONS request. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="allowedOrigins" />, <paramref name="allowedMethods" />, <paramref name="allowedHeaders" /> or <paramref name="exposedHeaders" /> is null. </exception>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableCorsRule.AllowedOrigins">
            <summary> The origin domains that are permitted to make a request against the service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '*' to allow all origin domains to make requests via CORS. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableCorsRule.AllowedMethods">
            <summary> The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated). </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableCorsRule.AllowedHeaders">
            <summary> The request headers that the origin domain may specify on the CORS request. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableCorsRule.ExposedHeaders">
            <summary> The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableCorsRule.MaxAgeInSeconds">
            <summary> The maximum amount time that a browser should cache the preflight OPTIONS request. </summary>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableEntityQueryResponse">
            <summary> The properties for the table entity query response. </summary>
            <summary> The properties for the table entity query response. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableEntityQueryResponse.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableEntityQueryResponse" />. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableEntityQueryResponse.#ctor(System.String,System.Collections.Generic.IReadOnlyList{System.Collections.Generic.IDictionary{System.String,System.Object}})">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableEntityQueryResponse" />. </summary>
            <param name="odataMetadata"> The metadata response of the table. </param>
            <param name="value"> List of table entities. </param>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableEntityQueryResponse.OdataMetadata">
            <summary> The metadata response of the table. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableEntityQueryResponse.Value">
            <summary> List of table entities. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableEntityQueryResponse.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableGeoReplicationInfo">
            <summary> The GeoReplication. </summary>
            <summary> The GeoReplication. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableGeoReplicationInfo.#ctor(Azure.Data.Tables.Models.TableGeoReplicationStatus,System.DateTimeOffset)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableGeoReplicationInfo" />. </summary>
            <param name="status"> The status of the secondary location. </param>
            <param name="lastSyncedOn"> A GMT date/time value, to the second. All primary writes preceding this value are guaranteed to be available for read operations at the secondary. Primary writes after this point in time may or may not be available for reads. </param>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableGeoReplicationInfo.Status">
            <summary> The status of the secondary location. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableGeoReplicationInfo.LastSyncedOn">
            <summary> A GMT date/time value, to the second. All primary writes preceding this value are guaranteed to be available for read operations at the secondary. Primary writes after this point in time may or may not be available for reads. </summary>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableGeoReplicationStatus">
            <summary> The status of the secondary location. </summary>
            <summary> The status of the secondary location. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableGeoReplicationStatus.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableGeoReplicationStatus" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableGeoReplicationStatus.Live">
            <summary> live. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableGeoReplicationStatus.Bootstrap">
            <summary> bootstrap. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableGeoReplicationStatus.Unavailable">
            <summary> unavailable. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableGeoReplicationStatus.op_Equality(Azure.Data.Tables.Models.TableGeoReplicationStatus,Azure.Data.Tables.Models.TableGeoReplicationStatus)">
            <summary> Determines if two <see cref="T:Azure.Data.Tables.Models.TableGeoReplicationStatus" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableGeoReplicationStatus.op_Inequality(Azure.Data.Tables.Models.TableGeoReplicationStatus,Azure.Data.Tables.Models.TableGeoReplicationStatus)">
            <summary> Determines if two <see cref="T:Azure.Data.Tables.Models.TableGeoReplicationStatus" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableGeoReplicationStatus.op_Implicit(System.String)~Azure.Data.Tables.Models.TableGeoReplicationStatus">
            <summary> Converts a string to a <see cref="T:Azure.Data.Tables.Models.TableGeoReplicationStatus" />. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableGeoReplicationStatus.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableGeoReplicationStatus.Equals(Azure.Data.Tables.Models.TableGeoReplicationStatus)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableGeoReplicationStatus.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableGeoReplicationStatus.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableItem">
            <summary> The properties for the table response. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableItem.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableItem" />. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableItem" />. </summary>
            <param name="name"> The name of the table. </param>
            <param name="odataType"> The odata type of the table. </param>
            <param name="odataId"> The id of the table. </param>
            <param name="odataEditLink"> The edit link of the table. </param>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableItem.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableItem.OdataType">
            <summary>
            The OdataType.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableItem.OdataId">
            <summary> The id of the table. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableItem.OdataEditLink">
            <summary> The edit link of the table. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableItem.Name">
            <summary> The name of the table. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableItem.#ctor(System.String)">
            <summary> Initializes a new instance of TableItem. </summary>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableMetrics">
            <summary> The Metrics. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableMetrics.#ctor(System.Boolean)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableMetrics" />. </summary>
            <param name="enabled"> Indicates whether metrics are enabled for the Table service. </param>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableMetrics.#ctor(System.String,System.Boolean,System.Nullable{System.Boolean},Azure.Data.Tables.TableRetentionPolicy)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableMetrics" />. </summary>
            <param name="version"> The version of Analytics to configure. </param>
            <param name="enabled"> Indicates whether metrics are enabled for the Table service. </param>
            <param name="includeApis"> Indicates whether metrics should generate summary statistics for called API operations. </param>
            <param name="retentionPolicy"> The retention policy. </param>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableMetrics.Version">
            <summary> The version of Analytics to configure. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableMetrics.Enabled">
            <summary> Indicates whether metrics are enabled for the Table service. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableMetrics.RetentionPolicy">
            <summary> The retention policy. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableMetrics.IncludeApis">
            <summary> Indicates whether metrics should generate summary statistics for called API operations. </summary>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableProperties">
            <summary> The properties for creating a table. </summary>
            <summary> The properties for creating a table. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableProperties" />. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableProperties.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableProperties" />. </summary>
            <param name="tableName"> The name of the table to create. </param>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableProperties.TableName">
            <summary> The name of the table to create. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableProperties.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableQueryResponse">
            <summary> The properties for the table query response. </summary>
            <summary> The properties for the table query response. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableQueryResponse.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableQueryResponse" />. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableQueryResponse.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Azure.Data.Tables.Models.TableItem})">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableQueryResponse" />. </summary>
            <param name="odataMetadata"> The metadata response of the table. </param>
            <param name="value"> List of tables. </param>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableQueryResponse.OdataMetadata">
            <summary> The metadata response of the table. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableQueryResponse.Value">
            <summary> List of tables. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableQueryResponse.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableResponse">
            <summary> The response for a single table. </summary>
            <summary> The response for a single table. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableResponse.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableResponse" />. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableResponse.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableResponse" />. </summary>
            <param name="name"> The name of the table. </param>
            <param name="odataType"> The odata type of the table. </param>
            <param name="odataId"> The id of the table. </param>
            <param name="odataEditLink"> The edit link of the table. </param>
            <param name="odataMetadata"> The metadata response of the table. </param>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableResponse.OdataMetadata">
            <summary> The metadata response of the table. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableResponse.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableServiceError">
            <summary> Table Service error. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableServiceError.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableServiceError" />. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableServiceError.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableServiceError" />. </summary>
            <param name="message"> The error message. </param>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableServiceError.Message">
            <summary> The error message. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableServiceError.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableServiceProperties">
            <summary> Table Service Properties. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableServiceProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableServiceProperties" />. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableServiceProperties.#ctor(Azure.Data.Tables.Models.TableAnalyticsLoggingSettings,Azure.Data.Tables.Models.TableMetrics,Azure.Data.Tables.Models.TableMetrics,System.Collections.Generic.IList{Azure.Data.Tables.Models.TableCorsRule})">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableServiceProperties" />. </summary>
            <param name="logging"> Azure Analytics Logging settings. </param>
            <param name="hourMetrics"> A summary of request statistics grouped by API in hourly aggregates for tables. </param>
            <param name="minuteMetrics"> A summary of request statistics grouped by API in minute aggregates for tables. </param>
            <param name="cors"> The set of CORS rules. </param>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableServiceProperties.Logging">
            <summary> Azure Analytics Logging settings. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableServiceProperties.HourMetrics">
            <summary> A summary of request statistics grouped by API in hourly aggregates for tables. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableServiceProperties.MinuteMetrics">
            <summary> A summary of request statistics grouped by API in minute aggregates for tables. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableServiceProperties.Cors">
            <summary> The set of CORS rules. </summary>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableServiceStatistics">
            <summary> Stats for the service. </summary>
            <summary> The Table Statistics for the service. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableServiceStatistics.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableServiceStatistics" />. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableServiceStatistics.#ctor(Azure.Data.Tables.Models.TableGeoReplicationInfo)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableServiceStatistics" />. </summary>
            <param name="geoReplication"> Geo-Replication information for the Secondary Storage Service. </param>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableServiceStatistics.GeoReplication">
            <summary> Geo-Replication information for the Secondary Storage Service. </summary>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableSignedIdentifier">
            <summary> A signed identifier. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableSignedIdentifier.#ctor(System.String,Azure.Data.Tables.Models.TableAccessPolicy)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableSignedIdentifier" />. </summary>
            <param name="id"> A unique id. </param>
            <param name="accessPolicy"> The access policy. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" /> is null. </exception>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableSignedIdentifier.Id">
            <summary> A unique id. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableSignedIdentifier.AccessPolicy">
            <summary> The access policy. </summary>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableModelFactory">
            <summary> Model factory for models. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableModelFactory.TableServiceStatistics(Azure.Data.Tables.Models.TableGeoReplicationInfo)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableServiceStatistics" />. </summary>
            <param name="geoReplication"> Geo-Replication information for the Secondary Storage Service. </param>
            <returns> A new <see cref="T:Azure.Data.Tables.Models.TableServiceStatistics" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableModelFactory.TableGeoReplicationInfo(Azure.Data.Tables.Models.TableGeoReplicationStatus,System.DateTimeOffset)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.Models.TableGeoReplicationInfo" />. </summary>
            <param name="status"> The status of the secondary location. </param>
            <param name="lastSyncedOn"> A GMT date/time value, to the second. All primary writes preceding this value are guaranteed to be available for read operations at the secondary. Primary writes after this point in time may or may not be available for reads. </param>
            <returns> A new <see cref="T:Azure.Data.Tables.Models.TableGeoReplicationInfo" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableModelFactory.TableItem(System.String,System.String,System.String,System.String)">
            <summary> Initializes new instance of TableItem class. </summary>
            <param name="name"> The name of the table. </param>
            <param name="odataType"> The odata type of the table. </param>
            <param name="odataId"> The id of the table. </param>
            <param name="odataEditLink"> The edit link of the table. </param>
            <returns> A new <see cref="T:Azure.Data.Tables.Models.TableItem" /> instance for mocking. </returns>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableErrorCode">
            <summary> Error codes returned by the service. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableErrorCode.#ctor(System.String)">
            <summary> Determines if two <see cref="T:Azure.Data.Tables.Models.TableErrorCode" /> values are the same. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.AuthorizationResourceTypeMismatch">
            <summary> AuthorizationResourceTypeMismatch. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.XMethodNotUsingPost">
            <summary> XMethodNotUsingPost. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.XMethodIncorrectValue">
            <summary> XMethodIncorrectValue. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.XMethodIncorrectCount">
            <summary> XMethodIncorrectCount. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.TableHasNoProperties">
            <summary> TableHasNoProperties. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.DuplicatePropertiesSpecified">
            <summary> DuplicatePropertiesSpecified. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.TableHasNoSuchProperty">
            <summary> TableHasNoSuchProperty. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.DuplicateKeyPropertySpecified">
            <summary> DuplicateKeyPropertySpecified. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.TableAlreadyExists">
            <summary> TableAlreadyExists. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.TableNotFound">
            <summary> TableNotFound.</summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.ResourceNotFound">
            <summary> ResourceNotFound. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.EntityNotFound">
            <summary> EntityNotFound. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.EntityAlreadyExists">
            <summary> EntityAlreadyExists. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.PartitionKeyNotSpecified">
            <summary> PartitionKeyNotSpecified. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.OperatorInvalid">
            <summary> OperatorInvalid. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.UpdateConditionNotSatisfied">
            <summary> UpdateConditionNotSatisfied. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.PropertiesNeedValue">
            <summary> PropertiesNeedValue. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.PartitionKeyPropertyCannotBeUpdated">
            <summary> PartitionKeyPropertyCannotBeUpdated. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.TooManyProperties">
            <summary> TooManyProperties. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.EntityTooLarge">
            <summary> EntityTooLarge. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.PropertyValueTooLarge">
            <summary> PropertyValueTooLarge. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.KeyValueTooLarge">
            <summary> KeyValueTooLarge. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.InvalidValueType">
            <summary> InvalidValueType. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.TableBeingDeleted">
            <summary> TableBeingDeleted. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.PrimaryKeyPropertyIsInvalidType">
            <summary> PrimaryKeyPropertyIsInvalidType. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.PropertyNameTooLong">
            <summary> PropertyNameTooLong. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.PropertyNameInvalid">
            <summary> PropertyNameInvalid. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.InvalidDuplicateRow">
            <summary> InvalidDuplicateRow. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.CommandsInBatchActOnDifferentPartitions">
            <summary> CommandsInBatchActOnDifferentPartitions. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.JsonFormatNotSupported">
            <summary> JsonFormatNotSupported. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.AtomFormatNotSupported">
            <summary> AtomFormatNotSupported. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.JsonVerboseFormatNotSupported">
            <summary> JsonVerboseFormatNotSupported. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.MediaTypeNotSupported">
            <summary> MediaTypeNotSupported. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.MethodNotAllowed">
            <summary> MethodNotAllowed. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.ContentLengthExceeded">
            <summary> ContentLengthExceeded. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.AccountIOPSLimitExceeded">
            <summary> AccountIOPSLimitExceeded. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.CannotCreateTableWithIOPSGreaterThanMaxAllowedPerTable">
            <summary> CannotCreateTableWithIOPSGreaterThanMaxAllowedPerTable. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.PerTableIOPSIncrementLimitReached">
            <summary> PerTableIOPSIncrementLimitReached. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.PerTableIOPSDecrementLimitReached">
            <summary> PerTableIOPSDecrementLimitReached. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.SettingIOPSForATableInProvisioningNotAllowed">
            <summary> SettingIOPSForATableInProvisioningNotAllowed. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.PartitionKeyEqualityComparisonExpected">
            <summary> PartitionKeyEqualityComparisonExpected. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.PartitionKeySpecifiedMoreThanOnce">
            <summary> PartitionKeySpecifiedMoreThanOnce. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.InvalidInput">
            <summary> InvalidInput. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.NotImplemented">
            <summary> NotImplemented. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.OperationTimedOut">
            <summary> OperationTimedOut. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.OutOfRangeInput">
            <summary> OutOfRangeInput. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.Forbidden">
            <summary> Forbidden. </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableErrorCode.AuthorizationPermissionMismatch">
            <summary> AuthorizationPermissionMismatch. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableErrorCode.op_Equality(Azure.Data.Tables.Models.TableErrorCode,Azure.Data.Tables.Models.TableErrorCode)">
            <summary> Determines if two <see cref="T:Azure.Data.Tables.Models.TableErrorCode" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableErrorCode.op_Inequality(Azure.Data.Tables.Models.TableErrorCode,Azure.Data.Tables.Models.TableErrorCode)">
            <summary> Determines if two <see cref="T:Azure.Data.Tables.Models.TableErrorCode" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableErrorCode.op_Implicit(System.String)~Azure.Data.Tables.Models.TableErrorCode">
            <summary> Converts a string to a <see cref="T:Azure.Data.Tables.Models.TableErrorCode" />. </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableErrorCode.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableErrorCode.Equals(Azure.Data.Tables.Models.TableErrorCode)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableErrorCode.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableErrorCode.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Data.Tables.Models.TableTransactionResult">
            <summary>
            The response from <see cref="M:Azure.Data.Tables.TableClient.SubmitTransaction(System.Collections.Generic.IEnumerable{Azure.Data.Tables.TableTransactionAction},System.Threading.CancellationToken)" /> or <see cref="M:Azure.Data.Tables.TableClient.SubmitTransactionAsync(System.Collections.Generic.IEnumerable{Azure.Data.Tables.TableTransactionAction},System.Threading.CancellationToken)" />.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Models.TableTransactionResult.ResponseCount">
            <summary>
            The number of batch sub-responses contained in this <see cref="T:Azure.Data.Tables.Models.TableTransactionResult" />.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.Models.TableTransactionResult.GetResponseForEntity(System.String)">
            <summary>
            Gets the batch sub-response for the batch sub-request associated with the entity with the specified <paramref name="rowKey" />.
            </summary>
            <param name="rowKey">The <see cref="P:Azure.Data.Tables.ITableEntity.RowKey" /> value of the entity related to the batch sub-request.</param>
            <returns></returns>
        </member>
        <member name="T:Azure.Data.Tables.TableRetentionPolicy">
            <summary> The retention policy. </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableRetentionPolicy.#ctor(System.Boolean)">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.TableRetentionPolicy" />. </summary>
            <param name="enabled"> Indicates whether a retention policy is enabled for the service. </param>
        </member>
        <member name="M:Azure.Data.Tables.TableRetentionPolicy.#ctor(System.Boolean,System.Nullable{System.Int32})">
            <summary> Initializes a new instance of <see cref="T:Azure.Data.Tables.TableRetentionPolicy" />. </summary>
            <param name="enabled"> Indicates whether a retention policy is enabled for the service. </param>
            <param name="days"> Indicates the number of days that metrics or logging or soft-deleted data should be retained. All data older than this value will be deleted. </param>
        </member>
        <member name="P:Azure.Data.Tables.TableRetentionPolicy.Enabled">
            <summary> Indicates whether a retention policy is enabled for the service. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableRetentionPolicy.Days">
            <summary> Indicates the number of days that metrics or logging or soft-deleted data should be retained. All data older than this value will be deleted. </summary>
        </member>
        <member name="P:Azure.Data.Tables.ServiceGetPropertiesHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="P:Azure.Data.Tables.ServiceGetStatisticsHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="P:Azure.Data.Tables.ServiceRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Data.Tables.ServiceRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.String)">
            <summary> Initializes a new instance of ServiceRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="url"> The URL of the service account or table that is the target of the desired operation. </param>
            <param name="version"> Specifies the version of the operation to use for this request. The default value is "2019-02-02". </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="url" /> or <paramref name="version" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.ServiceRestClient.SetPropertiesAsync(Azure.Data.Tables.Models.TableServiceProperties,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Sets properties for an account's Table service endpoint, including properties for Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="tableServiceProperties"> The Table Service properties. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableServiceProperties" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.ServiceRestClient.SetProperties(Azure.Data.Tables.Models.TableServiceProperties,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Sets properties for an account's Table service endpoint, including properties for Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="tableServiceProperties"> The Table Service properties. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableServiceProperties" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.ServiceRestClient.GetPropertiesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Gets the properties of an account's Table service, including properties for Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Data.Tables.ServiceRestClient.GetProperties(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Gets the properties of an account's Table service, including properties for Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Data.Tables.ServiceRestClient.GetStatisticsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Retrieves statistics related to replication for the Table service. It is only available on the secondary location endpoint when read-access geo-redundant replication is enabled for the account. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Data.Tables.ServiceRestClient.GetStatistics(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Retrieves statistics related to replication for the Table service. It is only available on the secondary location endpoint when read-access geo-redundant replication is enabled for the account. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="P:Azure.Data.Tables.ServiceSetPropertiesHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableCreateHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableCreateHeaders.PreferenceApplied">
            <summary> Indicates whether the Prefer request header was honored. If the response does not include this header, then the Prefer header was not honored. If this header is returned, its value will either be return-content or return-no-content. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableDeleteEntityHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableDeleteHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableGetAccessPolicyHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableInsertEntityHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableInsertEntityHeaders.PreferenceApplied">
            <summary> Indicates whether the Prefer request header was honored. If the response does not include this header, then the Prefer header was not honored. If this header is returned, its value will either be return-content or return-no-content. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableInsertEntityHeaders.ContentType">
            <summary> Indicates the content type of the payload. The value depends on the value specified for the Accept request header. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableMergeEntityHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableQueryEntitiesHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableQueryEntitiesHeaders.XMsContinuationNextPartitionKey">
            <summary> This header contains the continuation token value for partition key. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableQueryEntitiesHeaders.XMsContinuationNextRowKey">
            <summary> This header contains the continuation token value for row key. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableQueryEntityWithPartitionAndRowKeyHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableQueryEntityWithPartitionAndRowKeyHeaders.XMsContinuationNextPartitionKey">
            <summary> This header contains the continuation token value for partition key. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableQueryEntityWithPartitionAndRowKeyHeaders.XMsContinuationNextRowKey">
            <summary> This header contains the continuation token value for row key. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableQueryHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableQueryHeaders.XMsContinuationNextTableName">
            <summary> This header contains the continuation token value. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.String)">
            <summary> Initializes a new instance of TableRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="url"> The URL of the service account or table that is the target of the desired operation. </param>
            <param name="version"> Specifies the version of the operation to use for this request. The default value is "2019-02-02". </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="url" /> or <paramref name="version" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.QueryAsync(System.String,Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Queries tables under the given account. </summary>
            <param name="nextTableName"> A table query continuation token from a previous call. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.Query(System.String,Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Queries tables under the given account. </summary>
            <param name="nextTableName"> A table query continuation token from a previous call. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.CreateAsync(Azure.Data.Tables.Models.TableProperties,System.Nullable{Azure.Data.Tables.Models.ResponseFormat},Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Creates a new table under the given account. </summary>
            <param name="tableProperties"> The Table properties. </param>
            <param name="responsePreference"> Specifies whether the response should include the inserted entity in the payload. Possible values are return-no-content and return-content. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableProperties" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.Create(Azure.Data.Tables.Models.TableProperties,System.Nullable{Azure.Data.Tables.Models.ResponseFormat},Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Creates a new table under the given account. </summary>
            <param name="tableProperties"> The Table properties. </param>
            <param name="responsePreference"> Specifies whether the response should include the inserted entity in the payload. Possible values are return-no-content and return-content. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableProperties" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.CreateAsync(Azure.Core.RequestContent,System.String,System.String,Azure.RequestContext)">
            <summary>
            [Protocol Method] Creates a new table under the given account.
            <list type="bullet">
            <item>
            <description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description>
            </item>
            </list>
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="format"> Specifies the media type for the response. Allowed values: "application/json;odata=nometadata" | "application/json;odata=minimalmetadata" | "application/json;odata=fullmetadata". </param>
            <param name="responsePreference"> Specifies whether the response should include the inserted entity in the payload. Possible values are return-no-content and return-content. Allowed values: "return-no-content" | "return-content". </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.Create(Azure.Core.RequestContent,System.String,System.String,Azure.RequestContext)">
            <summary>
            [Protocol Method] Creates a new table under the given account.
            <list type="bullet">
            <item>
            <description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description>
            </item>
            </list>
            </summary>
            <param name="content"> The content to send as the body of the request. </param>
            <param name="format"> Specifies the media type for the response. Allowed values: "application/json;odata=nometadata" | "application/json;odata=minimalmetadata" | "application/json;odata=fullmetadata". </param>
            <param name="responsePreference"> Specifies whether the response should include the inserted entity in the payload. Possible values are return-no-content and return-content. Allowed values: "return-no-content" | "return-content". </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary> Operation permanently deletes the specified table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.Delete(System.String,System.Threading.CancellationToken)">
            <summary> Operation permanently deletes the specified table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.DeleteAsync(System.String,Azure.RequestContext)">
            <summary>
            [Protocol Method] Operation permanently deletes the specified table.
            <list type="bullet">
            <item>
            <description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description>
            </item>
            </list>
            </summary>
            <param name="table"> The name of the table. </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="table" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.Delete(System.String,Azure.RequestContext)">
            <summary>
            [Protocol Method] Operation permanently deletes the specified table.
            <list type="bullet">
            <item>
            <description>
            This <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/ProtocolMethods.md">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios.
            </description>
            </item>
            </list>
            </summary>
            <param name="table"> The name of the table. </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="table" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.QueryEntitiesAsync(System.String,System.Nullable{System.Int32},System.String,System.String,Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Queries entities in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="nextPartitionKey"> An entity query continuation token from a previous call. </param>
            <param name="nextRowKey"> An entity query continuation token from a previous call. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.QueryEntities(System.String,System.Nullable{System.Int32},System.String,System.String,Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Queries entities in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="nextPartitionKey"> An entity query continuation token from a previous call. </param>
            <param name="nextRowKey"> An entity query continuation token from a previous call. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.QueryEntityWithPartitionAndRowKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Queries a single entity in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="partitionKey"> The partition key of the entity. </param>
            <param name="rowKey"> The row key of the entity. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" />, <paramref name="partitionKey" /> or <paramref name="rowKey" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.QueryEntityWithPartitionAndRowKey(System.String,System.String,System.String,System.Nullable{System.Int32},Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Queries a single entity in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="partitionKey"> The partition key of the entity. </param>
            <param name="rowKey"> The row key of the entity. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" />, <paramref name="partitionKey" /> or <paramref name="rowKey" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.UpdateEntityAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Update entity in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="partitionKey"> The partition key of the entity. </param>
            <param name="rowKey"> The row key of the entity. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="ifMatch"> Match condition for an entity to be updated. If specified and a matching entity is not found, an error will be raised. To force an unconditional update, set to the wildcard character (*). If not specified, an insert will be performed when no existing entity is found to update and a replace will be performed if an existing entity is found. </param>
            <param name="tableEntityProperties"> The properties for the table entity. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" />, <paramref name="partitionKey" /> or <paramref name="rowKey" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.UpdateEntity(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Update entity in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="partitionKey"> The partition key of the entity. </param>
            <param name="rowKey"> The row key of the entity. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="ifMatch"> Match condition for an entity to be updated. If specified and a matching entity is not found, an error will be raised. To force an unconditional update, set to the wildcard character (*). If not specified, an insert will be performed when no existing entity is found to update and a replace will be performed if an existing entity is found. </param>
            <param name="tableEntityProperties"> The properties for the table entity. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" />, <paramref name="partitionKey" /> or <paramref name="rowKey" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.MergeEntityAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Merge entity in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="partitionKey"> The partition key of the entity. </param>
            <param name="rowKey"> The row key of the entity. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="ifMatch"> Match condition for an entity to be updated. If specified and a matching entity is not found, an error will be raised. To force an unconditional update, set to the wildcard character (*). If not specified, an insert will be performed when no existing entity is found to update and a merge will be performed if an existing entity is found. </param>
            <param name="tableEntityProperties"> The properties for the table entity. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" />, <paramref name="partitionKey" /> or <paramref name="rowKey" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.MergeEntity(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Merge entity in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="partitionKey"> The partition key of the entity. </param>
            <param name="rowKey"> The row key of the entity. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="ifMatch"> Match condition for an entity to be updated. If specified and a matching entity is not found, an error will be raised. To force an unconditional update, set to the wildcard character (*). If not specified, an insert will be performed when no existing entity is found to update and a merge will be performed if an existing entity is found. </param>
            <param name="tableEntityProperties"> The properties for the table entity. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" />, <paramref name="partitionKey" /> or <paramref name="rowKey" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.DeleteEntityAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Deletes the specified entity in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="partitionKey"> The partition key of the entity. </param>
            <param name="rowKey"> The row key of the entity. </param>
            <param name="ifMatch"> Match condition for an entity to be deleted. If specified and a matching entity is not found, an error will be raised. To force an unconditional delete, set to the wildcard character (*). </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" />, <paramref name="partitionKey" />, <paramref name="rowKey" /> or <paramref name="ifMatch" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.DeleteEntity(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Deletes the specified entity in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="partitionKey"> The partition key of the entity. </param>
            <param name="rowKey"> The row key of the entity. </param>
            <param name="ifMatch"> Match condition for an entity to be deleted. If specified and a matching entity is not found, an error will be raised. To force an unconditional delete, set to the wildcard character (*). </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" />, <paramref name="partitionKey" />, <paramref name="rowKey" /> or <paramref name="ifMatch" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.InsertEntityAsync(System.String,System.Nullable{System.Int32},System.Nullable{Azure.Data.Tables.Models.ResponseFormat},System.Collections.Generic.IDictionary{System.String,System.Object},Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Insert entity in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="responsePreference"> Specifies whether the response should include the inserted entity in the payload. Possible values are return-no-content and return-content. </param>
            <param name="tableEntityProperties"> The properties for the table entity. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.InsertEntity(System.String,System.Nullable{System.Int32},System.Nullable{Azure.Data.Tables.Models.ResponseFormat},System.Collections.Generic.IDictionary{System.String,System.Object},Azure.Data.Tables.Models.QueryOptions,System.Threading.CancellationToken)">
            <summary> Insert entity in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="responsePreference"> Specifies whether the response should include the inserted entity in the payload. Possible values are return-no-content and return-content. </param>
            <param name="tableEntityProperties"> The properties for the table entity. </param>
            <param name="queryOptions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.GetAccessPolicyAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Retrieves details about any stored access policies specified on the table that may be used with Shared Access Signatures. </summary>
            <param name="table"> The name of the table. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.GetAccessPolicy(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Retrieves details about any stored access policies specified on the table that may be used with Shared Access Signatures. </summary>
            <param name="table"> The name of the table. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.SetAccessPolicyAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Data.Tables.Models.TableSignedIdentifier},System.Threading.CancellationToken)">
            <summary> Sets stored access policies for the table that may be used with Shared Access Signatures. </summary>
            <param name="table"> The name of the table. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="tableAcl"> The acls for the table. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.SetAccessPolicy(System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Data.Tables.Models.TableSignedIdentifier},System.Threading.CancellationToken)">
            <summary> Sets stored access policies for the table that may be used with Shared Access Signatures. </summary>
            <param name="table"> The name of the table. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="tableAcl"> The acls for the table. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.SendBatchRequestAsync(Azure.Core.HttpMessage,System.Threading.CancellationToken)">
            <summary> Submits a batch operation to a table. </summary>
            <param name="message">The message to send.</param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="message" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.SendBatchRequest(Azure.Core.HttpMessage,System.Threading.CancellationToken)">
            <summary> Submits a batch operation to a table. </summary>
            <param name="message">The message to send.</param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="message" /> is null. </exception>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.QueryEntityWithPartitionAndRowKey(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,Azure.RequestContext)">
            <summary> Queries a single entity in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="partitionKey"> The partition key of the entity. </param>
            <param name="rowKey"> The row key of the entity. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="format"> Specifies the media type for the response. Allowed values: "application/json;odata=nometadata" | "application/json;odata=minimalmetadata" | "application/json;odata=fullmetadata". </param>
            <param name="select"> Select expression using OData notation. Limits the columns on each record to just those requested, e.g. "$select=PolicyAssignmentId, ResourceId". </param>
            <param name="filter"> OData filter expression. </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" />, <paramref name="partitionKey" /> or <paramref name="rowKey" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="table" />, <paramref name="partitionKey" /> or <paramref name="rowKey" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="M:Azure.Data.Tables.TableRestClient.QueryEntityWithPartitionAndRowKeyAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,Azure.RequestContext)">
            <summary> Queries a single entity in a table. </summary>
            <param name="table"> The name of the table. </param>
            <param name="partitionKey"> The partition key of the entity. </param>
            <param name="rowKey"> The row key of the entity. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. </param>
            <param name="format"> Specifies the media type for the response. Allowed values: "application/json;odata=nometadata" | "application/json;odata=minimalmetadata" | "application/json;odata=fullmetadata". </param>
            <param name="select"> Select expression using OData notation. Limits the columns on each record to just those requested, e.g. "$select=PolicyAssignmentId, ResourceId". </param>
            <param name="filter"> OData filter expression. </param>
            <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="table" />, <paramref name="partitionKey" /> or <paramref name="rowKey" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="table" />, <paramref name="partitionKey" /> or <paramref name="rowKey" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
            <returns> The response returned from the service. </returns>
        </member>
        <member name="P:Azure.Data.Tables.TableSetAccessPolicyHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableUpdateEntityHeaders.Version">
            <summary> Indicates the version of the Table service used to execute the request. This header is returned for requests made against version 2009-09-19 and above. </summary>
        </member>
        <member name="T:Azure.Data.Tables.ITableEntity">
             <summary>
             An interface defining the required properties for a table entity model. Custom entity model types must implement this interface.
             </summary>
            
             <remarks>
             Two options exist for implementations of <see cref="T:Azure.Data.Tables.ITableEntity" />: Strongly typed custom entity model classes, and the provided <see cref="T:Azure.Data.Tables.TableEntity" /> model.
             </remarks>
        </member>
        <member name="P:Azure.Data.Tables.ITableEntity.PartitionKey">
            <summary>
            The partition key is a unique identifier for the partition within a given table and forms the first part of an entity's primary key.
            </summary>
            <value>A string containing the partition key for the entity.</value>
        </member>
        <member name="P:Azure.Data.Tables.ITableEntity.RowKey">
            <summary>
            The row key is a unique identifier for an entity within a given partition. Together the <see cref="P:Azure.Data.Tables.ITableEntity.PartitionKey" /> and RowKey uniquely identify every entity within a table.
            </summary>
            <value>A string containing the row key for the entity.</value>
        </member>
        <member name="P:Azure.Data.Tables.ITableEntity.Timestamp">
            <summary>
            The Timestamp property is a DateTime value that is maintained on the server side to record the time an entity was last modified.
            The Table service uses the Timestamp property internally to provide optimistic concurrency. The value of Timestamp is a monotonically increasing value,
            meaning that each time the entity is modified, the value of Timestamp increases for that entity.
            This property should not be set on insert or update operations (the value will be ignored).
            </summary>
            <value>A <see cref="T:System.DateTimeOffset" /> containing the timestamp of the entity.</value>
        </member>
        <member name="P:Azure.Data.Tables.ITableEntity.ETag">
            <summary>
            Gets or sets the entity's ETag.
            </summary>
            <value>A string containing the ETag value for the entity.</value>
        </member>
        <member name="P:Azure.Data.Tables.Queryable.ExpressionParser.FilterString">
            <summary>
            Gets or sets the filter expression to use in the table query.
            </summary>
            <value>A string containing the filter expression to use in the query.</value>
        </member>
        <member name="T:Azure.Data.Tables.RequestRequestContent">
            <summary>
             Provides a container for content encoded using multipart/form-data MIME type.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.RequestRequestContent.#ctor(Azure.Core.Request)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.RequestRequestContent" /> class.
            </summary>
            <param name="request">The <see cref="T:Azure.Core.Request" /> instance to encapsulate.</param>
        </member>
        <member name="M:Azure.Data.Tables.RequestRequestContent.Dispose">
            <summary>
             Frees resources held by the <see cref="T:Azure.Core.MultipartContent" /> object.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.RequestRequestContent.TryComputeLength(System.Int64@)">
            <summary>
            Computes the length of the stream if possible.
            </summary>
            <param name="length">The computed length of the stream.</param>
            <returns><c>true</c> if the length has been computed; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Azure.Data.Tables.Errors">
            <summary>
            Create exceptions for common error cases.
            </summary>
        </member>
        <member name="T:Azure.Data.Tables.Sas.TableAccountSasBuilder">
            <summary>
            <see cref="T:Azure.Data.Tables.Sas.TableAccountSasBuilder" /> is used to generate a Shared Access
            Signature (SAS) for an Azure Storage table.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas" />.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableAccountSasBuilder.#ctor(Azure.Data.Tables.Sas.TableAccountSasPermissions,Azure.Data.Tables.Sas.TableAccountSasResourceTypes,System.DateTimeOffset)">
            <summary>
            Initializes an instance of a <see cref="T:Azure.Data.Tables.Sas.TableAccountSasBuilder" />.
            </summary>
            <param name="permissions">The permissions associated with the shared access signature.</param>
            <param name="resourceTypes"><see cref="T:Azure.Data.Tables.Sas.TableAccountSasResourceTypes" /> containing the accessible resource types.</param>
            <param name="expiresOn">The time at which the shared access signature becomes invalid.</param>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableAccountSasBuilder.#ctor(System.String,Azure.Data.Tables.Sas.TableAccountSasResourceTypes,System.DateTimeOffset)">
            <summary>
            Initializes an instance of a <see cref="T:Azure.Data.Tables.Sas.TableAccountSasBuilder" />.
            </summary>
            <param name="rawPermissions">The permissions associated with the shared access signature. This string should contain one or more of the following permission characters in this order: "racwdl".</param>
            <param name="resourceTypes"><see cref="T:Azure.Data.Tables.Sas.TableAccountSasResourceTypes" /> containing the accessible resource types.</param>
            <param name="expiresOn">The time at which the shared access signature becomes invalid.</param>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableAccountSasBuilder.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of <see cref="T:Azure.Data.Tables.Sas.TableAccountSasBuilder" /> based on an existing Uri containing a shared acccess signature.
            </summary>
            <param name="sasUri">The Uri containing a SAS token to parse.</param>
            <returns></returns>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasBuilder.Protocol">
            <summary>
            The optional signed protocol field specifies the protocol
            permitted for a request made with the SAS.  Possible values are
            <see cref="F:Azure.Data.Tables.Sas.TableSasProtocol.HttpsAndHttp" />,
            <see cref="F:Azure.Data.Tables.Sas.TableSasProtocol.Https" />, and
            <see cref="F:Azure.Data.Tables.Sas.TableSasProtocol.None" />.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasBuilder.StartsOn">
            <summary>
            Optionally specify the time at which the shared access signature
            becomes valid.  If omitted when DateTimeOffset.MinValue is used,
            start time for this call is assumed to be the time when the
            storage service receives the request.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasBuilder.ExpiresOn">
            <summary>
            The time at which the shared access signature becomes invalid.
            This field must be omitted if it has been specified in an
            associated stored access policy.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasBuilder.Permissions">
            <summary>
            The permissions associated with the shared access signature. The
            user is restricted to operations allowed by the permissions. This
            field must be omitted if it has been specified in an associated
            stored access policy.  <see cref="T:Azure.Data.Tables.Sas.TableAccountSasPermissions" /> can be used to create the
            permissions string.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasBuilder.IPRange">
            <summary>
            Specifies an IP address or a range of IP addresses from which to
            accept requests. If the IP address from which the request
            originates does not match the IP address or address range
            specified on the SAS token, the request is not authenticated.
            When specifying a range of IP addresses, note that the range is
            inclusive.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasBuilder.Identifier">
            <summary>
            An optional unique value up to 64 characters in length that
            correlates to an access policy specified for the container.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasBuilder.ResourceTypes">
            <summary>
            The resource types associated with the shared access signature. The
            user is restricted to operations on the specified resources.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasBuilder.Version">
            <summary>
            The storage service version to use to authenticate requests made
            with this shared access signature, and the service version to use
            when handling requests made with this shared access signature.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableAccountSasBuilder.SetPermissions(Azure.Data.Tables.Sas.TableAccountSasPermissions)">
            <summary>
            Sets the permissions for a table SAS.
            </summary>
            <param name="permissions">
            <see cref="T:Azure.Data.Tables.Sas.TableAccountSasPermissions" /> containing the allowed permissions.
            </param>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableAccountSasBuilder.SetPermissions(System.String)">
            <summary>
            Sets the permissions for the SAS using a raw permissions string.
            </summary>
            <param name="rawPermissions">Raw permissions string for the SAS.</param>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableAccountSasBuilder.ToSasQueryParameters(Azure.Data.Tables.TableSharedKeyCredential)">
            <summary>
            Use an account's <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" /> to sign this
            shared access signature values to produce the proper SAS query
            parameters for authenticating requests.
            </summary>
            <param name="sharedKeyCredential">
            The storage account's <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" />.
            </param>
            <returns>
            An instance of <see cref="T:Azure.Data.Tables.Sas.TableAccountSasQueryParameters" />.
            </returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableAccountSasBuilder.Sign(Azure.Data.Tables.TableSharedKeyCredential)">
            <summary>
            Use an account's <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" /> to sign this
            shared access signature values to produce the proper SAS query
            parameters for authenticating requests.
            </summary>
            <param name="sharedKeyCredential">
            The storage account's <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" />.
            </param>
            <returns>
            A URL encoded query string representing the SAS.
            </returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableAccountSasBuilder.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableAccountSasBuilder.Equals(System.Object)">
            <summary>
            Check if two TablesSasBuilder instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableAccountSasBuilder.GetHashCode">
            <summary>
            Get a hash code for the TablesSasBuilder.
            </summary>
            <returns>Hash code for the TablesSasBuilder.</returns>
        </member>
        <member name="T:Azure.Data.Tables.Sas.TableAccountSasPermissions">
            <summary>
            <see cref="T:Azure.Data.Tables.Sas.TableAccountSasPermissions" /> contains the list of
            permissions that can be set for a file's access policy.  Use
            <see cref="M:Azure.Data.Tables.Sas.TableAccountSasBuilder.SetPermissions(Azure.Data.Tables.Sas.TableAccountSasPermissions)" />
            to set the permissions on the <see cref="T:Azure.Data.Tables.Sas.TableAccountSasBuilder" />.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableAccountSasPermissions.Read">
            <summary>
            Indicates that Read is permitted.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableAccountSasPermissions.Write">
            <summary>
            Indicates that Write is permitted.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableAccountSasPermissions.Delete">
            <summary>
            Indicates that Delete is permitted.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableAccountSasPermissions.List">
            <summary>
            Indicates that List is permitted.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableAccountSasPermissions.Add">
            <summary>
            Indicates that Add is permitted.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableAccountSasPermissions.Update">
            <summary>
            Indicates that Update is permitted.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableAccountSasPermissions.All">
            <summary>
            Indicates that all permissions are set.
            </summary>
        </member>
        <member name="T:Azure.Data.Tables.Sas.TableAccountSasQueryParameters">
             <summary>
             A <see cref="T:Azure.Data.Tables.Sas.TableAccountSasQueryParameters" /> object represents the components
             that make up an Azure Storage Shared Access Signature's query
             parameters.  You can construct a new instance using
             <see cref="T:Azure.Data.Tables.Sas.TableAccountSasBuilder" />.
            
             For more information, <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas">Create an account SAS</see>.
             </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.DefaultSasVersion">
            <summary>
            The default service version to use for Shared Access Signatures.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.Version">
            <summary>
            Gets the storage service version to use to authenticate requests
            made with this shared access signature, and the service version to
            use when handling requests made with this shared access signature.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.ResourceTypes">
            <summary>
            Gets which resources are accessible via the shared access signature.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.Protocol">
            <summary>
            Optional. Specifies the protocol permitted for a request made with
            the shared access signature.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.StartsOn">
            <summary>
            Gets the optional time at which the shared access signature becomes
            valid.  If omitted, start time for this call is assumed to be the
            time when the storage service receives the request.
            <see cref="F:System.DateTimeOffset.MinValue" /> means not set.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.ExpiresOn">
            <summary>
            Gets the time at which the shared access signature becomes invalid.
            <see cref="F:System.DateTimeOffset.MinValue" /> means not set.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.IPRange">
            <summary>
            Gets the optional IP address or a range of IP addresses from which
            to accept requests.  When specifying a range, note that the range
            is inclusive.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.Identifier">
            <summary>
            Gets the optional unique value up to 64 characters in length that
            correlates to an access policy specified for the blob container, queue,
            or share.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.Resource">
            <summary>
            Gets the resources are accessible via the shared access signature.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.Permissions">
            <summary>
            Gets the permissions associated with the shared access signature.
            The user is restricted to operations allowed by the permissions.
            This field must be omitted if it has been specified in an
            associated stored access policy.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.Signature">
            <summary>
            The signature is an HMAC computed over the string-to-sign and key
            using the SHA256 algorithm, and then encoded using Base64 encoding.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.#ctor(System.String,System.Nullable{Azure.Data.Tables.Sas.TableAccountSasResourceTypes},Azure.Data.Tables.Sas.TableSasProtocol,System.DateTimeOffset,System.DateTimeOffset,Azure.Data.Tables.Sas.TableSasIPRange,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new TableAccountSasQueryParameters instance.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Data.Tables.Sas.TableAccountSasQueryParameters" />
            type based on the supplied query parameters <paramref name="values" />.
            All SAS-related query parameters will be removed from
            <paramref name="values" />.
            </summary>
            <param name="values">URI query parameters</param>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableAccountSasQueryParameters.ToString">
            <summary>
            Convert the SAS query parameters into a URL encoded query string.
            </summary>
            <returns>
            A URL encoded query string representing the SAS.
            </returns>
        </member>
        <member name="T:Azure.Data.Tables.Sas.TableAccountSasResourceTypes">
            <summary>
            Specifies the resource types accessible from an account level shared
            access signature.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableAccountSasResourceTypes.Service">
            <summary>
            Indicates whether service-level APIs are accessible
            from this shared access signature (e.g., Get/Set Service
            Properties, Get Service Stats, List Tables).
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableAccountSasResourceTypes.Container">
            <summary>
            Indicates whether table account-level APIs are accessible
            from this shared access signature (e.g. Create/Delete/Query Table).
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableAccountSasResourceTypes.Object">
            <summary>
            Indicates whether entity-level APIs are accessible from this shared access
            signature (e.g. Query/Insert/Update/Delete entity).
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableAccountSasResourceTypes.All">
            <summary>
            Indicates all service-level APIs are accessible from this shared
            access signature.
            </summary>
        </member>
        <member name="T:Azure.Data.Tables.Sas.TableSasBuilder">
            <summary>
            <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" /> is used to generate a Shared Access
            Signature (SAS) for an Azure Storage table.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas">
            Constructing an Account SAS</see>.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasBuilder.#ctor(System.String,Azure.Data.Tables.Sas.TableSasPermissions,System.DateTimeOffset)">
            <summary>
            Initializes an instance of a <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" />.
            </summary>
            <param name="tableName">The name of the table being made accessible with the shared access signature.</param>
            <param name="permissions">The permissions associated with the shared access signature.</param>
            <param name="expiresOn">The time at which the shared access signature becomes invalid.</param>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasBuilder.#ctor(System.String,System.String,System.DateTimeOffset)">
            <summary>
            Initializes an instance of a <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" />.
            </summary>
            <param name="tableName">The name of the table being made accessible with the shared access signature.</param>
            <param name="rawPermissions">The permissions associated with the shared access signature. This string should contain one or more of the following permission characters in this order: "raud".</param>
            <param name="expiresOn">The time at which the shared access signature becomes invalid.</param>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasBuilder.#ctor">
             <summary>
             Initializes an instance of a <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" /> with no details set. At minimum, additional properties must be set to create a valid SaS.
             These include setting the <see cref="P:Azure.Data.Tables.Sas.TableSasBuilder.TableName" />, permissions, and an expiry. Permissions and expiry can also be specified in a shared access policy, which can be
             selected by specifying the name of the policy on the <see cref="P:Azure.Data.Tables.Sas.TableSasBuilder.Identifier" /> property.
            
             </summary>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasBuilder.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" /> based on an existing Uri containing a shared access signature.
            </summary>
            <param name="sasUri">The Uri containing a SAS token to parse.</param>
            <returns></returns>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasBuilder.Protocol">
            <summary>
            The optional signed protocol field specifies the protocol
            permitted for a request made with the SAS.  Possible values are
            <see cref="F:Azure.Data.Tables.Sas.TableSasProtocol.HttpsAndHttp" />,
            <see cref="F:Azure.Data.Tables.Sas.TableSasProtocol.Https" />, and
            <see cref="F:Azure.Data.Tables.Sas.TableSasProtocol.None" />.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasBuilder.StartsOn">
            <summary>
            Optionally specify the time at which the shared access signature
            becomes valid.  If omitted when DateTimeOffset.MinValue is used,
            start time for this call is assumed to be the time when the
            storage service receives the request.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasBuilder.ExpiresOn">
            <summary>
            The time at which the shared access signature becomes invalid.
            This field must be omitted if it has been specified in an
            associated stored access policy.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasBuilder.Permissions">
            <summary>
            The permissions associated with the shared access signature. The
            user is restricted to operations allowed by the permissions. This
            field must be omitted if it has been specified in an associated
            stored access policy.  <see cref="T:Azure.Data.Tables.Sas.TableSasPermissions" /> can be used to create the
            permissions string.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasBuilder.IPRange">
            <summary>
            Specifies an IP address or a range of IP addresses from which to
            accept requests. If the IP address from which the request
            originates does not match the IP address or address range
            specified on the SAS token, the request is not authenticated.
            When specifying a range of IP addresses, note that the range is
            inclusive.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasBuilder.Identifier">
            <summary>
            An optional unique value up to 64 characters in length that
            correlates to an access policy specified for the container.
            Note: Either the stored access policy specified by the <see cref="P:Azure.Data.Tables.Sas.TableSasBuilder.Identifier" /> or the created shared access signature must define an expiry.
            If neither define an expiry or both do, authentication will fail.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasBuilder.TableName">
            <summary>
            The name of the table being made accessible.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasBuilder.PartitionKeyStart">
            <summary>
            The optional start of the partition key values range being made available.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasBuilder.RowKeyStart">
            <summary>
            The optional start of the row key values range being made available.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasBuilder.PartitionKeyEnd">
            <summary>
            The optional end of the partition key values range being made available.
            <see cref="P:Azure.Data.Tables.Sas.TableSasBuilder.PartitionKeyStart" /> must be specified if this value is set.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasBuilder.RowKeyEnd">
            <summary>
            The optional end of the row key values range being made available.
            <see cref="P:Azure.Data.Tables.Sas.TableSasBuilder.RowKeyStart" /> must be specified if this value is set.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasBuilder.Version">
            <summary>
            The storage service version to use to authenticate requests made
            with this shared access signature, and the service version to use
            when handling requests made with this shared access signature.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasBuilder.SetPermissions(Azure.Data.Tables.Sas.TableSasPermissions)">
            <summary>
            Sets the permissions for a table SAS.
            </summary>
            <param name="permissions">
            <see cref="T:Azure.Data.Tables.Sas.TableSasPermissions" /> containing the allowed permissions.
            </param>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasBuilder.SetPermissions(System.String)">
            <summary>
            Sets the permissions for the SAS using a raw permissions string.
            </summary>
            <param name="rawPermissions">Raw permissions string for the SAS.</param>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasBuilder.ToSasQueryParameters(Azure.Data.Tables.TableSharedKeyCredential)">
            <summary>
            Use an account's <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" /> to sign this
            shared access signature values to produce the proper SAS query
            parameters for authenticating requests.
            </summary>
            <param name="sharedKeyCredential">
            The storage account's <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" />.
            </param>
            <returns>
            An instance of <see cref="T:Azure.Data.Tables.Sas.TableSasQueryParameters" />.
            </returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasBuilder.Sign(Azure.Data.Tables.TableSharedKeyCredential)">
            <summary>
            Use an account's <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" /> to sign this
            shared access signature values to produce the proper SAS query
            parameters for authenticating requests.
            </summary>
            <param name="sharedKeyCredential">
            The storage account's <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" />.
            </param>
            <returns>
            A URL encoded query string representing the SAS.
            </returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasBuilder.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasBuilder.Equals(System.Object)">
            <summary>
            Check if two TablesSasBuilder instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasBuilder.GetHashCode">
            <summary>
            Get a hash code for the TablesSasBuilder.
            </summary>
            <returns>Hash code for the TablesSasBuilder.</returns>
        </member>
        <member name="T:Azure.Data.Tables.Sas.TableSasExtensions">
            <summary>
            Extension methods for Sas.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasExtensions.ToProtocolString(Azure.Data.Tables.Sas.TableSasProtocol)">
            <summary>
            Gets a string representation of the protocol.
            </summary>
            <returns>A string representation of the protocol.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasExtensions.ParseProtocol(System.String)">
            <summary>
            Parse a string representation of a protocol.
            </summary>
            <param name="s">A string representation of a protocol.</param>
            <returns>A <see cref="T:Azure.Data.Tables.Sas.TableSasProtocol" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasExtensions.ParseResourceTypes(System.String)">
            <summary>
            Parse a string representing which resource types are accessible
            from a shared access signature.
            </summary>
            <param name="s">
            A string representing which resource types are accessible.
            </param>
            <returns>
            An <see cref="T:Azure.Data.Tables.Sas.TableAccountSasResourceTypes" /> instance.
            </returns>
            <remarks>
            The order here matches the order used by the portal when generating SAS signatures.
            </remarks>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasExtensions.FormatTimesForSasSigning(System.DateTimeOffset)">
            <summary>
            FormatTimesForSASSigning converts a time.Time to a snapshotTimeFormat string suitable for a
            SASField's StartTime or ExpiryTime fields. Returns "" if value.IsZero().
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasExtensions.AddToBuilder(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Helper method to add query param key value pairs to StringBuilder
            </summary>
            <param name="sb">StringBuilder instance</param>
            <param name="key">query key</param>
            <param name="value">query value</param>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasExtensions.AppendProperties(Azure.Data.Tables.Sas.TableAccountSasQueryParameters,System.Text.StringBuilder)">
            <summary>
            Builds the query parameter string for the SasQueryParameters instance.
            </summary>
            <param name="parameters"></param>
            <param name="stringBuilder">
            StringBuilder instance to add the query params to
            </param>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasExtensions.AppendQueryParameter(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Appends a query parameter to the string builder.
            </summary>
            <param name="sb">string builder instance.</param>
            <param name="key">query parameter key.</param>
            <param name="value">query parameter value.</param>
        </member>
        <member name="T:Azure.Data.Tables.Sas.TableSasIPRange">
            <summary>
            Represents a range of allowed IP addresses for constructing a Shared
            Access Signature.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasIPRange.Start">
            <summary>
            Gets the start of the IP range.  Not specified if equal to null or
            <see cref="F:System.Net.IPAddress.None" />.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasIPRange.End">
            <summary>
            Gets the optional end of the IP range.  Not specified if equal to
            null or <see cref="F:System.Net.IPAddress.None" />.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasIPRange.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            Creates a new <see cref="T:Azure.Data.Tables.Sas.TableSasIPRange" />.
            </summary>
            <param name="start">
            The range's start <see cref="T:System.Net.IPAddress" />.
            </param>
            <param name="end">
            The range's optional end <see cref="T:System.Net.IPAddress" />.
            </param>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasIPRange.ToString">
            <summary>
            Creates a string representation of an <see cref="T:Azure.Data.Tables.Sas.TableSasIPRange" />.
            </summary>
            <returns>
            A string representation of an <see cref="T:Azure.Data.Tables.Sas.TableSasIPRange" />.
            </returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasIPRange.Parse(System.String)">
            <summary>
            Parse an IP range string into a new <see cref="T:Azure.Data.Tables.Sas.TableSasIPRange" />.
            </summary>
            <param name="s">IP range string to parse.</param>
            <returns>The parsed <see cref="T:Azure.Data.Tables.Sas.TableSasIPRange" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasIPRange.Equals(System.Object)">
            <summary>
            Check if two <see cref="T:Azure.Data.Tables.Sas.TableSasIPRange" /> instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasIPRange.GetHashCode">
            <summary>
            Get a hash code for the <see cref="T:Azure.Data.Tables.Sas.TableSasIPRange" />.
            </summary>
            <returns>Hash code for the <see cref="T:Azure.Data.Tables.Sas.TableSasIPRange" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasIPRange.op_Equality(Azure.Data.Tables.Sas.TableSasIPRange,Azure.Data.Tables.Sas.TableSasIPRange)">
            <summary>
            Check if two <see cref="T:Azure.Data.Tables.Sas.TableSasIPRange" /> instances are equal.
            </summary>
            <param name="left">The first instance to compare.</param>
            <param name="right">The second instance to compare.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasIPRange.op_Inequality(Azure.Data.Tables.Sas.TableSasIPRange,Azure.Data.Tables.Sas.TableSasIPRange)">
            <summary>
            Check if two <see cref="T:Azure.Data.Tables.Sas.TableSasIPRange" /> instances are not equal.
            </summary>
            <param name="left">The first instance to compare.</param>
            <param name="right">The second instance to compare.</param>
            <returns>True if they're not equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasIPRange.Equals(Azure.Data.Tables.Sas.TableSasIPRange)">
            <summary>
            Check if two <see cref="T:Azure.Data.Tables.Sas.TableSasIPRange" /> instances are equal.
            </summary>
            <param name="other">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="T:Azure.Data.Tables.Sas.TableSasPermissions">
            <summary>
            <see cref="T:Azure.Data.Tables.Sas.TableSasPermissions" /> contains the list of
            permissions that can be set for a table's access policy.  Use
            <see cref="M:Azure.Data.Tables.Sas.TableSasBuilder.SetPermissions(Azure.Data.Tables.Sas.TableSasPermissions)" />
            to set the permissions on the <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" />.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableSasPermissions.Read">
            <summary>
            Indicates that Read is permitted.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableSasPermissions.Add">
            <summary>
            Indicates that Add is permitted.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableSasPermissions.Update">
            <summary>
            Indicates that Update is permitted.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableSasPermissions.Delete">
            <summary>
            Indicates that Delete is permitted.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableSasPermissions.All">
            <summary>
            Indicates that all permissions are set.
            </summary>
        </member>
        <member name="T:Azure.Data.Tables.Sas.TableSasProtocol">
            <summary>
            Defines the protocols permitted for Storage requests made with a shared
            access signature.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableSasProtocol.None">
            <summary>
            No protocol has been specified. If no value is specified,
            the service will default to HttpsAndHttp.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableSasProtocol.HttpsAndHttp">
            <summary>
            Only requests issued over HTTPS or HTTP will be permitted.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.Sas.TableSasProtocol.Https">
            <summary>
            Only requests issued over HTTPS will be permitted.
            </summary>
        </member>
        <member name="T:Azure.Data.Tables.Sas.TableSasQueryParameters">
             <summary>
             A <see cref="T:Azure.Data.Tables.Sas.TableSasQueryParameters" /> object represents the components
             that make up an Azure Storage Shared Access Signature's query
             parameters.  You can construct a new instance using
             <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" />.
            
             For more information, <see href="https://docs.microsoft.com/rest/api/storageservices/create-service-sas">Create a service SAS</see>.
             </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasQueryParameters.StartPartitionKey">
            <summary>
            The start of PartionKey range.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasQueryParameters.StartRowKey">
            <summary>
            The end of PartionKey range.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasQueryParameters.EndPartitionKey">
            <summary>
            The start of RowKey range.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasQueryParameters.EndRowKey">
            <summary>
            The end of RowKey range.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.Sas.TableSasQueryParameters.Empty">
            <summary>
            Gets empty shared access signature query parameters.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasQueryParameters.#ctor(System.String,System.Nullable{Azure.Data.Tables.Sas.TableAccountSasResourceTypes},System.String,System.String,System.String,System.String,System.String,Azure.Data.Tables.Sas.TableSasProtocol,System.DateTimeOffset,System.DateTimeOffset,Azure.Data.Tables.Sas.TableSasIPRange,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new TableSasQueryParameters instance.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasQueryParameters.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Data.Tables.Sas.TableSasQueryParameters" />
            type based on the supplied query parameters <paramref name="values" />.
            All SAS-related query parameters will be removed from
            <paramref name="values" />.
            </summary>
            <param name="values">URI query parameters</param>
        </member>
        <member name="M:Azure.Data.Tables.Sas.TableSasQueryParameters.ToString">
            <summary>
            Convert the SAS query parameters into a URL encoded query string.
            </summary>
            <returns>
            A URL encoded query string representing the SAS.
            </returns>
        </member>
        <member name="T:Azure.Data.Tables.TableExtensions">
            <summary>
            Table enum extensions.
            </summary>
            <summary>
            Table enum extensions.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableExtensions.ToPermissionsString(Azure.Data.Tables.Sas.TableAccountSasPermissions)">
            <summary>
            Create a permissions string to provide
            <see cref="P:Azure.Data.Tables.Sas.TableAccountSasBuilder.Permissions" />.
            </summary>
            <returns>A permissions string.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableExtensions.ToPermissionsString(Azure.Data.Tables.Sas.TableAccountSasResourceTypes)">
            <summary>
            Creates a string representing which resource types are allowed
            for <see cref="P:Azure.Data.Tables.Sas.TableAccountSasBuilder.ResourceTypes" />.
            </summary>
            <returns>
            A string representing which resource types are allowed.
            </returns>
            <remarks>
            The order here matches the order used by the portal when generating SAS signatures.
            </remarks>
        </member>
        <member name="M:Azure.Data.Tables.TableExtensions.ToPermissionsString(Azure.Data.Tables.Sas.TableSasPermissions)">
            <summary>
            Create a permissions string to provide
            <see cref="P:Azure.Data.Tables.Sas.TableSasBuilder.Permissions" />.
            </summary>
            <returns>A permissions string.</returns>
        </member>
        <member name="T:Azure.Data.Tables.ServiceClient">
            <summary>
            Partial class stub for <see cref="T:Azure.Data.Tables.ServiceClient" /> to override visibility of code generation.
            </summary>
        </member>
        <member name="T:Azure.Data.Tables.TableBearerTokenChallengeAuthorizationPolicy">
            <summary>
            The Tables authorization policy which supports challenges including tenantId discovery.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableBearerTokenChallengeAuthorizationPolicy.#ctor(Azure.Core.TokenCredential,System.String,System.Boolean)">
            <summary>
            Initializes an instance of the <see cref="T:Azure.Data.Tables.TableBearerTokenChallengeAuthorizationPolicy" />.
            </summary>
            <param name="credential">The credential to be used for fetching tokens.</param>
            <param name="scope">The scope used by the credential.</param>
            <param name="enableTenantDiscovery">Determines if tenant discovery should be enabled.</param>
        </member>
        <member name="M:Azure.Data.Tables.TableBearerTokenChallengeAuthorizationPolicy.AuthorizeRequest(Azure.Core.HttpMessage)">
            <summary>
            Executes before <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> or
            <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> is called.
            Implementers of this method are expected to call <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequest(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" /> or <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequestAsync(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" />
            if authorization is required for requests not related to handling a challenge response.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param>
        </member>
        <member name="M:Azure.Data.Tables.TableBearerTokenChallengeAuthorizationPolicy.AuthorizeRequestAsync(Azure.Core.HttpMessage)">
            <summary>
            Executes before <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> or
            <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> is called.
            Implementers of this method are expected to call <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequest(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" /> or <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequestAsync(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" />
            if authorization is required for requests not related to handling a challenge response.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param><returns>The <see cref="T:System.Threading.Tasks.ValueTask" /> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableBearerTokenChallengeAuthorizationPolicy.AuthorizeRequestOnChallenge(Azure.Core.HttpMessage)">
            <summary>
            Executed in the event a 401 response with a WWW-Authenticate authentication challenge header is received after the initial request.
            </summary><remarks>Service client libraries may override this to handle service specific authentication challenges.</remarks><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> to be authenticated.</param><returns>A boolean indicating whether the request was successfully authenticated and should be sent to the transport.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableBearerTokenChallengeAuthorizationPolicy.AuthorizeRequestOnChallengeAsync(Azure.Core.HttpMessage)">
            <summary>
            Executed in the event a 401 response with a WWW-Authenticate authentication challenge header is received after the initial request.
            </summary><remarks>Service client libraries may override this to handle service specific authentication challenges.</remarks><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> to be authenticated.</param><returns>A boolean indicating whether the request was successfully authenticated and should be sent to the transport.</returns>
        </member>
        <member name="T:Azure.Data.Tables.TableClient">
            <summary>
            The <see cref="T:Azure.Data.Tables.TableClient" /> allows you to interact with Azure Tables hosted in either Azure storage accounts or Azure Cosmos DB table API.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableClient.SharedKeyCredential">
            <summary>
            Gets the The <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" /> used to authenticate and generate SAS.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableClient.Name">
            <summary>
            The name of the table with which this client instance will interact.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableClient.AccountName">
            <summary>
            The name of the table account with which this client instance will interact.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableClient.Uri">
            <summary>
            The Uri of the table.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.#ctor(System.Uri,Azure.Data.Tables.TableClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableClient" /> using the specified <see cref="P:Azure.Data.Tables.TableClient.Uri" /> which contains a SAS token.
            See <see cref="M:Azure.Data.Tables.TableClient.GetSasBuilder(Azure.Data.Tables.Sas.TableSasPermissions,System.DateTimeOffset)" /> for creating a SAS token.
            </summary>
            <param name="endpoint">
            A <see cref="P:Azure.Data.Tables.TableClient.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net/?{sas_token}" or
            "https://{account_name}.table.cosmos.azure.com?{sas_token}".
            </param>
            <param name="options">
            Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="endpoint" /> does not start with 'https'.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Data.Tables.TableClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableClient" /> using the specified <see cref="P:Azure.Data.Tables.TableClient.Uri" /> and <see cref="T:Azure.AzureSasCredential" />.
            See <see cref="M:Azure.Data.Tables.TableClient.GetSasBuilder(Azure.Data.Tables.Sas.TableSasPermissions,System.DateTimeOffset)" /> for creating a SAS token.
            </summary>
            <param name="endpoint">
            A <see cref="P:Azure.Data.Tables.TableClient.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net"
            or "https://{account_name}.table.cosmos.azure.com".
            </param>
            <param name="credential">The shared access signature credential used to sign requests.</param>
            <param name="options">
            Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="endpoint" /> does not start with 'https'.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="credential" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.#ctor(System.Uri,System.String,Azure.Data.Tables.TableSharedKeyCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableClient" /> using the specified table service <see cref="P:Azure.Data.Tables.TableClient.Uri" /> and <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" />.
            </summary>
            <param name="endpoint">
            A <see cref="P:Azure.Data.Tables.TableClient.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net/" or "https://{account_name}.table.cosmos.azure.com/".
            </param>
            <param name="tableName">The name of the table with which this client instance will interact.</param>
            <param name="credential">The shared key credential used to sign requests.</param>
            <exception cref="T:System.ArgumentException"><paramref name="tableName" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="tableName" /> or <paramref name="credential" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.#ctor(System.Uri,System.String,Azure.Data.Tables.TableSharedKeyCredential,Azure.Data.Tables.TableClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableClient" /> using the specified table service <see cref="P:Azure.Data.Tables.TableClient.Uri" /> and <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" />.
            </summary>
            <param name="endpoint">
            A <see cref="P:Azure.Data.Tables.TableClient.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net/" or "https://{account_name}.table.cosmos.azure.com/".
            </param>
            <param name="tableName">The name of the table with which this client instance will interact.</param>
            <param name="credential">The shared key credential used to sign requests.</param>
            <param name="options">
            Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="tableName" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="tableName" /> or <paramref name="credential" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableClient" /> using the specified connection string.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Table
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
             <param name="tableName">The name of the table with which this client instance will interact.</param>
             <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" /> or <paramref name="tableName" /> is null.</exception>
             <exception cref="T:System.InvalidOperationException"><paramref name="connectionString" /> is invalid.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.#ctor(System.String,System.String,Azure.Data.Tables.TableClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableServiceClient" />.
             Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableClient" /> using the specified connection string.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
             <param name="tableName">The name of the table with which this client instance will interact.</param>
             <param name="options">
             Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
             </param>
             <exception cref="T:System.ArgumentException"><paramref name="tableName" /> is an empty string.</exception>
             <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" /> or <paramref name="tableName" /> is null.</exception>
             <exception cref="T:System.InvalidOperationException"><paramref name="connectionString" /> is invalid.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Data.Tables.TableClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableClient" /> using the specified <see cref="P:Azure.Data.Tables.TableClient.Uri" /> and <see cref="T:Azure.Core.TokenCredential" />.
            </summary>
            <param name="endpoint">
            A <see cref="P:Azure.Data.Tables.TableClient.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net"
            or "https://{account_name}.table.cosmos.azure.com".
            </param>
            <param name="tableName">The name of the table with which this client instance will interact.</param>
            <param name="tokenCredential">The <see cref="T:Azure.Core.TokenCredential" /> used to authorize requests.</param>
            <param name="options">
            Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="endpoint" /> does not start with 'https'. or <paramref name="tableName" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="tableName" />, <paramref name="endpoint" />, or <paramref name="tokenCredential" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableClient" /> class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.GetSasBuilder(Azure.Data.Tables.Sas.TableSasPermissions,System.DateTimeOffset)">
            <summary>
            Gets a <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" /> instance scoped to the current table which can be used to generate a Shared Access Signature (SAS)
            token capable of granting limited access to table resources.
            See <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-service-sas">Create a service SAS</see> for more details.
            </summary>
            <param name="permissions"><see cref="T:Azure.Data.Tables.Sas.TableSasPermissions" /> containing the allowed permissions.</param>
            <param name="expiresOn">The time at which the shared access signature becomes invalid.</param>
            <returns>An instance of <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.GetSasBuilder(System.String,System.DateTimeOffset)">
            <summary>
            Gets a <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" /> instance scoped to the current table which can be used to generate a Shared Access Signature (SAS)
            token capable of granting limited access to table resources.
            See <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-service-sas">Create a service SAS</see> for more details.
            </summary>
            <param name="rawPermissions">
            The permissions associated with the shared access signature.
            This string should contain one or more of the following permission characters in this order: "racwdl".
            See <see cref="M:Azure.Data.Tables.TableClient.GetSasBuilder(Azure.Data.Tables.Sas.TableSasPermissions,System.DateTimeOffset)" /> if you prefer to specify strongly typed permission settings.
            </param>
            <param name="expiresOn">The time at which the shared access signature becomes invalid.</param>
            <returns>An instance of <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.Create(System.Threading.CancellationToken)">
            <summary>
            Creates a table with the name used to construct this client instance.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>A <see cref="T:Azure.Response`1" /> containing properties of the table.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.CreateAsync(System.Threading.CancellationToken)">
            <summary>
            Creates a table with the name used to construct this client instance.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>A <see cref="T:Azure.Response`1" /> containing properties of the table.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.CreateIfNotExists(System.Threading.CancellationToken)">
            <summary>
            Creates a table with the name used to construct this client instance if it does not already exist.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>A <see cref="T:Azure.Response`1" /> containing properties of the table. If the table already exists, then <see cref="P:Azure.Response.Status" /> is 409. The <see cref="T:Azure.Response" /> can be accessed via the GetRawResponse() method.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.CreateIfNotExistsAsync(System.Threading.CancellationToken)">
            <summary>
            Creates a table with the name used to construct this client instance if it does not already exist.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>A <see cref="T:Azure.Response`1" /> containing properties of the table. If the table already exists, then <see cref="P:Azure.Response.Status" /> is 409. The <see cref="T:Azure.Response" /> can be accessed via the GetRawResponse() method.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the table with the name used to construct this client instance.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes the table with the name used to construct this client instance.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.AddEntityAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Adds a Table Entity of type <typeparamref name="T" /> into the Table.
            </summary>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="entity">The entity to add.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>A <see cref="T:Azure.Response" /> containing headers such as ETag.</returns>
            <exception cref="T:Azure.RequestFailedException">Exception thrown if entity already exists.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.AddEntity``1(``0,System.Threading.CancellationToken)">
            <summary>
            Adds a Table Entity of type <typeparamref name="T" /> into the Table.
            </summary>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="entity">The entity to add.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>A <see cref="T:Azure.Response" /> containing headers such as ETag</returns>
            <exception cref="T:Azure.RequestFailedException">Exception thrown if entity already exists.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.GetEntity``1(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Gets the specified table entity of type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="partitionKey">The partitionKey that identifies the table entity.</param>
            <param name="rowKey">The rowKey that identifies the table entity.</param>
            <param name="select">Selects which set of entity properties to return in the result set.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Exception thrown if the entity doesn't exist.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="partitionKey" /> or <paramref name="rowKey" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.GetEntityAsync``1(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Gets the specified table entity of type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="partitionKey">The partitionKey that identifies the table entity.</param>
            <param name="rowKey">The rowKey that identifies the table entity.</param>
            <param name="select">Selects which set of entity properties to return in the result set.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Exception thrown if the entity doesn't exist.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="partitionKey" /> or <paramref name="rowKey" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.GetEntityIfExists``1(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Gets the specified table entity of type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="partitionKey">The partitionKey that identifies the table entity.</param>
            <param name="rowKey">The rowKey that identifies the table entity.</param>
            <param name="select">Selects which set of entity properties to return in the result set. Pass <c>null</c> to retreive all properties.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns> The <see cref="T:Azure.NullableResponse`1" /> whose <c>HasValue</c> property will return <c>true</c> if the entity existed, otherwise <c>false</c>.</returns>
            <exception cref="T:Azure.RequestFailedException">Exception thrown if an unexpected error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="partitionKey" /> or <paramref name="rowKey" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.GetEntityIfExistsAsync``1(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Gets the specified table entity of type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="partitionKey">The partitionKey that identifies the table entity.</param>
            <param name="rowKey">The rowKey that identifies the table entity.</param>
            <param name="select">Selects which set of entity properties to return in the result set. Pass <c>null</c> to retreive all properties.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns> The <see cref="T:Azure.NullableResponse`1" /> whose <c>HasValue</c> property will return <c>true</c> if the entity existed, otherwise <c>false</c>.</returns>
            <exception cref="T:Azure.RequestFailedException">Exception thrown if an unexpected error occurs.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="partitionKey" /> or <paramref name="rowKey" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.UpsertEntityAsync``1(``0,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)">
            <summary>
            Replaces the specified table entity of type <typeparamref name="T" />, if it exists. Creates the entity if it does not exist.
            </summary>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="entity">The entity to upsert.</param>
            <param name="mode">Determines the behavior of the upsert operation when the entity already exists in the table.
            See <see cref="T:Azure.Data.Tables.TableUpdateMode" /> for more details.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.UpsertEntity``1(``0,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)">
            <summary>
            Replaces the specified table entity of type <typeparamref name="T" />, if it exists. Creates the entity if it does not exist.
            </summary>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="entity">The entity to upsert.</param>
            <param name="mode">Determines the behavior of the update operation when the entity already exists in the table.
            See <see cref="T:Azure.Data.Tables.TableUpdateMode" /> for more details.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.UpdateEntityAsync``1(``0,Azure.ETag,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)">
            <summary>
            Updates the specified table entity of type <typeparamref name="T" />, if it exists.
            If the <paramref name="mode" /> is <see cref="F:Azure.Data.Tables.TableUpdateMode.Replace" />, the entity will be replaced.
            If the <paramref name="mode" /> is <see cref="F:Azure.Data.Tables.TableUpdateMode.Merge" />, the property values present in the <paramref name="entity" />
            will be merged with the existing entity.
            </summary>
            <remarks>
            See <see cref="T:Azure.Data.Tables.TableUpdateMode" /> for more information about the behavior of the <paramref name="mode" />.
            </remarks>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="entity">The entity to update.</param>
            <param name="ifMatch">
            The If-Match value to be used for optimistic concurrency.
            If <see cref="F:Azure.ETag.All" /> is specified, the operation will be executed unconditionally.
            If the <see cref="P:Azure.Data.Tables.ITableEntity.ETag" /> value is specified, the operation will fail with a status of 412 (Precondition Failed)
            if the <see cref="T:Azure.ETag" /> value of the entity in the table does not match.
            </param>
            <param name="mode">Determines the behavior of the Update operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.UpdateEntity``1(``0,Azure.ETag,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)">
            <summary>
            Updates the specified table entity of type <typeparamref name="T" />, if it exists.
            If the <paramref name="mode" /> is <see cref="F:Azure.Data.Tables.TableUpdateMode.Replace" />, the entity will be replaced.
            If the <paramref name="mode" /> is <see cref="F:Azure.Data.Tables.TableUpdateMode.Merge" />, the property values present in the
            <paramref name="entity" /> will be merged with the existing entity.
            </summary>
            <remarks>
            See <see cref="T:Azure.Data.Tables.TableUpdateMode" /> for more information about the behavior of the <paramref name="mode" />.
            </remarks>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="entity">The entity to update.</param>
            <param name="ifMatch">
            The If-Match value to be used for optimistic concurrency.
            If <see cref="F:Azure.ETag.All" /> is specified, the operation will be executed unconditionally.
            If the <see cref="P:Azure.Data.Tables.ITableEntity.ETag" /> value is specified, the operation will fail with a status of 412 (Precondition Failed)
            if the <see cref="T:Azure.ETag" /> value of the entity in the table does not match.
            </param>
            <param name="mode">Determines the behavior of the Update operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.QueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Queries entities in the table.
            </summary>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="filter">
            Returns only entities that satisfy the specified filter expression.
            For example, the following expression would filter entities with a PartitionKey of 'foo': <c>e =&gt; e.PartitionKey == "foo"</c>.
            </param>
            <param name="maxPerPage">
            The maximum number of entities that will be returned per page. If unspecified, the default value is 1000 for storage accounts and is not limited for Cosmos DB table API.
            Note: This value does not limit the total number of results if the result is fully enumerated.
            </param>
            <param name="select">
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of entity property names that selects which set of entity properties to return in the result set.
            For example, the following value would return only the PartitionKey and RowKey properties: <c>new[] { "PartitionKey, RowKey"}</c>.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>An <see cref="T:Azure.AsyncPageable`1" /> containing a collection of entity models serialized as type <typeparamref name="T" />.</returns>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Queries entities in the table.
            </summary>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="filter">
            Returns only entities that satisfy the specified filter expression.
            For example, the following expression would filter entities with a PartitionKey of 'foo': <c>e =&gt; e.PartitionKey == "foo"</c>.
            </param>
            <param name="maxPerPage">
            The maximum number of entities that will be returned per page. If unspecified, the default value is 1000 for storage accounts and is not limited for Cosmos DB table API.
            Note: This value does not limit the total number of results if the result is fully enumerated.
            </param>
            <param name="select">
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of entity property names that selects which set of entity properties to return in the result set.
            For example, the following value would return only the PartitionKey and RowKey properties: <c>new[] { "PartitionKey, RowKey"}</c>.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>A <see cref="T:Azure.Pageable`1" /> containing a collection of entity models serialized as type <typeparamref name="T" />.</returns>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.QueryAsync``1(System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Queries entities in the table.
            </summary>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="filter">
            Returns only entities that satisfy the specified OData filter.
            For example, the following filter would filter entities with a PartitionKey of 'foo': <c>"PartitionKey eq 'foo'"</c>.
            </param>
            <param name="maxPerPage">
            The maximum number of entities that will be returned per page. If unspecified, the default value is 1000 for storage accounts and is not limited for Cosmos DB table API.
            Note: This value does not limit the total number of results if the result is fully enumerated.
            </param>
            <param name="select">
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of entity property names that selects which set of entity properties to return in the result set.
            For example, the following value would return only the PartitionKey and RowKey properties: <c>new[] { "PartitionKey, RowKey"}</c>.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>An <see cref="T:Azure.AsyncPageable`1" /> containing a collection of entity models serialized as type <typeparamref name="T" />.</returns>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.Query``1(System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Queries entities in the table.
            </summary>
            <typeparam name="T">A custom model type that implements <see cref="T:Azure.Data.Tables.ITableEntity" /> or an instance of <see cref="T:Azure.Data.Tables.TableEntity" />.</typeparam>
            <param name="filter">
            Returns only entities that satisfy the specified OData filter.
            For example, the following filter would filter entities with a PartitionKey of 'foo': <c>"PartitionKey eq 'foo'"</c>.
            </param>
            <param name="maxPerPage">
            The maximum number of entities that will be returned per page. If unspecified, the default value is 1000 for storage accounts and is not limited for Cosmos DB table API.
            Note: This value does not limit the total number of results if the result is fully enumerated.
            </param>
            <param name="select">
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of entity property names that selects which set of entity properties to return in the result set.
            For example, the following value would return only the PartitionKey and RowKey properties: <c>new[] { "PartitionKey, RowKey"}</c>.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>A <see cref="T:Azure.Pageable`1" /> containing a collection of entity models serialized as type <typeparamref name="T" />.</returns>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.DeleteEntityAsync(System.String,System.String,Azure.ETag,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified table entity.
            </summary>
            <remarks>Note: This method should not fail because the entity does not exist, however if delete operations are submitted in a <see cref="T:Azure.Data.Tables.TableTransactionAction" />, the transaction will fail if the entity does not exist.</remarks>
            <param name="partitionKey">The partitionKey that identifies the table entity.</param>
            <param name="rowKey">The rowKey that identifies the table entity.</param>
            <param name="ifMatch">
            The If-Match value to be used for optimistic concurrency.
            If <see cref="F:Azure.ETag.All" /> is specified, the operation will be executed unconditionally.
            If the <see cref="P:Azure.Data.Tables.ITableEntity.ETag" /> value is specified, the operation will fail with a status of 412 (Precondition Failed)
            if the <see cref="T:Azure.ETag" /> value of the entity in the table does not match.
            The default is to delete unconditionally.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.DeleteEntityAsync(Azure.Data.Tables.ITableEntity,Azure.ETag,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified table entity.
            </summary>
            <remarks>Note: This method should not fail because the entity does not exist, however if delete operations are submitted in a <see cref="T:Azure.Data.Tables.TableTransactionAction" />, the transaction will fail if the entity does not exist.</remarks>
            <param name="entity">The table entity to delete.</param>
            <param name="ifMatch">
            The If-Match value to be used for optimistic concurrency.
            If <see cref="F:Azure.ETag.All" /> is specified, the operation will be executed unconditionally.
            If the <see cref="P:Azure.Data.Tables.ITableEntity.ETag" /> value is specified, the operation will fail with a status of 412 (Precondition Failed)
            if the <see cref="T:Azure.ETag" /> value of the entity in the table does not match.
            The default is to delete unconditionally.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.DeleteEntity(System.String,System.String,Azure.ETag,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified table entity.
            </summary>
            <remarks>Note: This method should not fail because the entity does not exist, however if delete operations are submitted in a <see cref="T:Azure.Data.Tables.TableTransactionAction" />, the transaction will fail if the entity does not exist.</remarks>
            <param name="partitionKey">The partitionKey that identifies the table entity.</param>
            <param name="rowKey">The rowKey that identifies the table entity.</param>
            <param name="ifMatch">
            The If-Match value to be used for optimistic concurrency.
            If <see cref="F:Azure.ETag.All" /> is specified, the operation will be executed unconditionally.
            If the <see cref="P:Azure.Data.Tables.ITableEntity.ETag" /> value is specified, the operation will fail with a status of 412 (Precondition Failed)
            if the <see cref="T:Azure.ETag" /> value of the entity in the table does not match.
            The default is to delete unconditionally.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.DeleteEntity(Azure.Data.Tables.ITableEntity,Azure.ETag,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified table entity.
            </summary>
            <remarks>Note: This method should not fail because the entity does not exist, however if delete operations are submitted in a <see cref="T:Azure.Data.Tables.TableTransactionAction" />, the transaction will fail if the entity does not exist.</remarks>
            <param name="entity">The table entity to delete.</param>
            <param name="ifMatch">
            The If-Match value to be used for optimistic concurrency.
            If <see cref="F:Azure.ETag.All" /> is specified, the operation will be executed unconditionally.
            If the <see cref="P:Azure.Data.Tables.ITableEntity.ETag" /> value is specified, the operation will fail with a status of 412 (Precondition Failed)
            if the <see cref="T:Azure.ETag" /> value of the entity in the table does not match.
            The default is to delete unconditionally.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.GetAccessPoliciesAsync(System.Threading.CancellationToken)">
            <summary> Retrieves details about any stored access policies specified on the table that may be used with Shared Access Signatures. </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.GetAccessPolicies(System.Threading.CancellationToken)">
            <summary> Retrieves details about any stored access policies specified on the table that may be used with Shared Access Signatures. </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Data.Tables.Models.TableSignedIdentifier},System.Threading.CancellationToken)">
            <summary> sets stored access policies for the table that may be used with Shared Access Signatures. </summary>
            <param name="tableAcl"> the access policies for the table. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Data.Tables.Models.TableSignedIdentifier},System.Threading.CancellationToken)">
            <summary> sets stored access policies for the table that may be used with Shared Access Signatures. </summary>
            <param name="tableAcl"> the access policies for the table. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.CreateQueryFilter``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Creates an OData filter query string from the provided expression.
            </summary>
            <typeparam name="T">The type of the entity being queried. Typically this will be derived from <see cref="T:Azure.Data.Tables.ITableEntity" />
            or <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <param name="filter">A filter expression.</param>
            <returns>The string representation of the filter expression.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.CreateQueryFilter(System.FormattableString)">
            <summary>
            Create an OData filter expression from an interpolated string.  The interpolated values will be quoted and escaped as necessary.
            </summary>
            <param name="filter">An interpolated filter string.</param>
            <returns>A valid OData filter expression.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.SubmitTransactionAsync(System.Collections.Generic.IEnumerable{Azure.Data.Tables.TableTransactionAction},System.Threading.CancellationToken)">
            <summary>
            Submits the batch transaction to the service for execution.
            The sub-operations contained in the batch will either succeed or fail together as a transaction.
            </summary>
            <param name="transactionActions">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the <see cref="T:Azure.Data.Tables.TableTransactionAction" />s to submit to the service.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns><see cref="T:Azure.Response`1" /> containing a <see cref="T:System.Collections.Generic.IReadOnlyList`1" /> of <see cref="T:Azure.Response" />.
            Each sub-response in the collection corresponds to the <see cref="T:Azure.Data.Tables.TableTransactionAction" /> provided to the <paramref name="transactionActions" /> parameter at the same index position.
            Each response can be inspected for details for its corresponding table operation, such as the <see cref="P:Azure.Response.Headers" /> property containing the <see cref="P:Azure.Core.ResponseHeaders.ETag" /></returns>
            <exception cref="T:Azure.RequestFailedException" /> if the batch transaction fails./&gt;
            <exception cref="T:System.InvalidOperationException" /> if the batch has been previously submitted.
        </member>
        <member name="M:Azure.Data.Tables.TableClient.SubmitTransaction(System.Collections.Generic.IEnumerable{Azure.Data.Tables.TableTransactionAction},System.Threading.CancellationToken)">
            <summary>
            Submits the batch transaction to the service for execution.
            The sub-operations contained in the batch will either succeed or fail together as a transaction.
            </summary>
            <param name="transactionActions">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the <see cref="T:Azure.Data.Tables.TableTransactionAction" />s to submit to the service.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns><see cref="T:Azure.Response`1" /> containing a <see cref="T:System.Collections.Generic.IReadOnlyList`1" /> of <see cref="T:Azure.Response" />.
            Each sub-response in the collection corresponds to the <see cref="T:Azure.Data.Tables.TableTransactionAction" /> provided to the <paramref name="transactionActions" /> parameter at the same index position.
            Each response can be inspected for details for its corresponding table operation, such as the <see cref="P:Azure.Response.Headers" /> property containing the <see cref="P:Azure.Core.ResponseHeaders.ETag" /></returns>
            <exception cref="T:Azure.RequestFailedException" /> if the batch transaction fails./&gt;
            <exception cref="T:System.InvalidOperationException" /> if the batch has been previously submitted.
        </member>
        <member name="M:Azure.Data.Tables.TableClient.GenerateSasUri(Azure.Data.Tables.Sas.TableSasPermissions,System.DateTimeOffset)">
             <summary>
             The <see cref="M:Azure.Data.Tables.TableClient.GenerateSasUri(Azure.Data.Tables.Sas.TableSasPermissions,System.DateTimeOffset)" />
             returns a <see cref="P:Azure.Data.Tables.TableClient.Uri" /> that generates a Table Service
             Shared Access Signature (SAS) Uri based on the Client properties
             and parameters passed.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a Service SAS</see>.
             </summary>
             <param name="permissions"> Required. Specifies the list of permissions to be associated with the SAS.
             See <see cref="T:Azure.Data.Tables.Sas.TableSasPermissions" />.
             </param>
             <param name="expiresOn">
             Required. Specifies the time at which the SAS becomes invalid. This field
             must be omitted if it has been specified in an associated stored access policy.
             </param>
             <returns> A <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" /> on successfully deleting. </returns>
             <remarks> An <see cref="T:System.Exception" /> will be thrown if a failure occurs. </remarks>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.GenerateSasUri(Azure.Data.Tables.Sas.TableSasBuilder)">
             <summary>
             The <see cref="M:Azure.Data.Tables.TableClient.GenerateSasUri(Azure.Data.Tables.Sas.TableSasBuilder)" /> returns a
             <see cref="P:Azure.Data.Tables.TableClient.Uri" /> that generates a Table Service SAS Uri based
             on the Client properties and builder passed.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a Service SAS</see>
             </summary>
             <param name="builder"> Used to generate a Shared Access Signature (SAS). </param>
             <returns> A <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" /> on successfully deleting. </returns>
             <remarks> An <see cref="T:System.Exception" /> will be thrown if a failure occurs. </remarks>
        </member>
        <member name="M:Azure.Data.Tables.TableClient.SetBatchGuids(System.Guid,System.Guid)">
            <summary>
            Re-initializes the batch with the specified Guids for testing purposes.
            </summary>
            <param name="batchGuid">The batch boundary Guid.</param>
            <param name="changesetGuid">The changeset boundary Guid.</param>
        </member>
        <member name="T:Azure.Data.Tables.TableClientOptions">
            <summary>
            Options to configure the requests to the Table service.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableClientOptions.#ctor(Azure.Data.Tables.TableClientOptions.ServiceVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableClientOptions" /> class.
            class.
            </summary>
            <param name="serviceVersion">
            The <see cref="T:Azure.Data.Tables.TableClientOptions.ServiceVersion" /> of the service API used when
            making requests.
            </param>
        </member>
        <member name="P:Azure.Data.Tables.TableClientOptions.EnableTenantDiscovery">
            <summary>
             Enables tenant discovery through the authorization challenge when the client is configured to use a TokenCredential.
            When <c>true</c>, the client will attempt an initial un-authorized request to prompt an OAuth challenge in order to discover the correct tenant for the resource.
            </summary>
        </member>
        <member name="T:Azure.Data.Tables.TableClientOptions.ServiceVersion">
            <summary>
            Gets the <see cref="T:Azure.Data.Tables.TableClientOptions.ServiceVersion" /> of the service API used when making requests.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.TableClientOptions.ServiceVersion.V2019_02_02">
            <summary>
            The Tables API version 2019-02-02.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.TableClientOptions.ServiceVersion.V2020_12_06">
            <summary>
            The Tables API version 2020-12-06.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableConnectionString.TableStorageUri">
            <summary>
            Gets the endpoints for the Table service at the primary and secondary location, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri" /> containing the Table service endpoints.</value>
        </member>
        <member name="P:Azure.Data.Tables.TableConnectionString.Credentials">
            <summary>
            Gets the credentials used to create this <see cref="T:Azure.Data.Tables.TableConnectionString" /> object.
            </summary>
            <value>A StorageCredentials object.</value>
        </member>
        <member name="P:Azure.Data.Tables.TableConnectionString.DefaultEndpoints">
            <summary>
            True if the user used a constructor that auto-generates endpoints.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableConnectionString.EndpointSuffix">
            <summary>
            The storage service hostname suffix set by the user, if any.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableConnectionString.Settings">
            <summary>
            The connection string parsed into settings.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableConnectionString.IsDevStoreAccount">
            <summary>
            Indicates whether this account is a development storage account.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.TableConnectionString._accountName">
            <summary>
            Private record of the account name for use in ToString(bool).
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableConnectionString.#ctor(System.Object,System.ValueTuple{System.Uri,System.Uri})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableConnectionString" /> class using the specified
            account credentials and service endpoints.
            </summary>
            <param name="storageCredentials">A StorageCredentials object.</param>
            <param name="tableStorageUri">A <see cref="T:System.Uri" /> specifying the Table service endpoint or endpoints.</param>
        </member>
        <member name="P:Azure.Data.Tables.TableConnectionString.DevelopmentStorageAccount">
            <summary>
            Gets a <see cref="T:Azure.Data.Tables.TableConnectionString" /> object that references the well-known development storage account.
            </summary>
            <value>A <see cref="T:Azure.Data.Tables.TableConnectionString" /> object representing the development storage account.</value>
        </member>
        <member name="M:Azure.Data.Tables.TableConnectionString.Parse(System.String)">
            <summary>
            Parses a connection string and returns a <see cref="T:Azure.Data.Tables.TableConnectionString" /> created
            from the connection string.
            </summary>
            <param name="connectionString">A valid connection string.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="connectionString" /> is null or empty.</exception>
            <exception cref="T:System.FormatException">Thrown if <paramref name="connectionString" /> is not a valid connection string.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="connectionString" /> cannot be parsed.</exception>
            <returns>A <see cref="T:Azure.Data.Tables.TableConnectionString" /> object constructed from the values provided in the connection string.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableConnectionString.TryParse(System.String,Azure.Data.Tables.TableConnectionString@)">
            <summary>
            Indicates whether a connection string can be parsed to return a <see cref="T:Azure.Data.Tables.TableConnectionString" /> object.
            </summary>
            <param name="connectionString">The connection string to parse.</param>
            <param name="account">A <see cref="T:Azure.Data.Tables.TableConnectionString" /> object to hold the instance returned if
            the connection string can be parsed.</param>
            <returns><b>true</b> if the connection string was successfully parsed; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableConnectionString.ParseInternal(System.String,Azure.Data.Tables.TableConnectionString@,System.String@)">
            <summary>
            Internal implementation of Parse/TryParse.
            </summary>
            <param name="connectionString">The string to parse.</param>
            <param name="accountInformation">The <see cref="T:Azure.Data.Tables.TableConnectionString" /> to return.</param>
            <param name="error">A callback for reporting errors.</param>
            <returns>If true, the parse was successful. Otherwise, false.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableConnectionString.GetTableNameFromUri(System.Uri)">
            <summary>
            Returns the table name given the <paramref name="uri" />.
            </summary>
            <param name="uri">The primary endpoint Uri.</param>
            <returns></returns>
        </member>
        <member name="M:Azure.Data.Tables.TableConnectionString.GetAccountNameFromUri(System.Uri)">
            <summary>
            Returns the account name given the <paramref name="uri" />.
            </summary>
            <param name="uri">The primary endpoint Uri.</param>
            <returns></returns>
        </member>
        <member name="M:Azure.Data.Tables.TableConnectionString.GetSecondaryUriFromPrimary(System.Uri,System.String)">
            <summary>
            Generates the secondary endpoint Uri given the <paramref name="primaryUri" />.
            </summary>
            <param name="primaryUri">The primary endpoint Uri.</param>
            <param name="accountName">The account name.</param>
            <returns></returns>
        </member>
        <member name="M:Azure.Data.Tables.TableConnectionString.ConstructTableEndpoint(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the default table endpoint using the specified protocol and account name.
            </summary>
            <param name="scheme">The protocol to use.</param>
            <param name="accountName">The name of the storage account.</param>
            <param name="endpointSuffix">The Endpoint DNS suffix; use <c>null</c> for default.</param>
            <param name="sasToken">The sas token; use <c>null</c> for default.</param>
            <returns>The default table endpoint.</returns>
        </member>
        <member name="T:Azure.Data.Tables.TableConstants.Sas">
            <summary>
            Sas constant values.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.TableConstants.Sas.DefaultSasVersion">
            <summary>
            Gets the default service version to use when building shared access
            signatures.
            </summary>
        </member>
        <member name="T:Azure.Data.Tables.TableConstants.ConnectionStrings">
            <summary>
            Table Connection String constant values.
            </summary>
        </member>
        <member name="T:Azure.Data.Tables.TableEntity">
            <summary>
            A generic dictionary-like <see cref="T:Azure.Data.Tables.ITableEntity" /> type which defines an arbitrary set of properties on an entity as key-value pairs.
            </summary>
            <remarks>
            This type can be used with any of the generic entity interaction methods in <see cref="T:Azure.Data.Tables.TableClient" /> where entity model type flexibility is desired.
            For example, if your table contains a jagged schema, or you need to precisely update a subset of properties in a <see cref="F:Azure.Data.Tables.TableUpdateMode.Merge" /> mode operation.
            </remarks>
        </member>
        <member name="P:Azure.Data.Tables.TableEntity.PartitionKey">
            <summary>
            The partition key is a unique identifier for the partition within a given table and forms the first part of an entity's primary key.
            </summary>
            <value>A string containing the partition key for the entity.</value>
        </member>
        <member name="P:Azure.Data.Tables.TableEntity.RowKey">
            <summary>
            The row key is a unique identifier for an entity within a given partition. Together, the <see cref="P:Azure.Data.Tables.TableEntity.PartitionKey" /> and RowKey uniquely identify an entity within a table.
            </summary>
            <value>A string containing the row key for the entity.</value>
        </member>
        <member name="P:Azure.Data.Tables.TableEntity.Timestamp">
            <summary>
            The Timestamp property is a DateTimeOffset value that is maintained on the server side to record the time an entity was last modified.
            The Table service uses the Timestamp property internally to provide optimistic concurrency. The value of Timestamp is a monotonically increasing value,
            meaning that each time the entity is modified, the value of Timestamp increases for that entity. This property should not be set on insert or update operations (the value will be ignored).
            </summary>
            <value>A <see cref="T:System.DateTimeOffset" /> containing the timestamp of the entity.</value>
        </member>
        <member name="P:Azure.Data.Tables.TableEntity.ETag">
            <summary>
            Gets or sets the entity's ETag.
            </summary>
            <value>An <see cref="P:Azure.Data.Tables.TableEntity.ETag" /> containing the ETag value for the entity.</value>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Azure.Data.Tables.TableEntity" /> class without any properties initialized.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableEntity" /> class with the specified partition key and row key.
            </summary>
            <param name="partitionKey">A string containing the partition key of the <see cref="T:Azure.Data.Tables.TableEntity" /> to be initialized.</param>
            <param name="rowKey">A string containing the row key of the <see cref="T:Azure.Data.Tables.TableEntity" /> to be initialized.</param>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableEntity" /> class with properties specified in <paramref name="values" />.
            </summary>
            <param name="values">A <see cref="T:System.Collections.IDictionary" /> containing the initial values of the entity.</param>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.GetString(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Data.Tables.TableEntity" />'s
            <see cref="T:System.String" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.InvalidOperationException">Value associated with given <paramref name="key" /> is not of type <see cref="T:System.String" />.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.GetBinaryData(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Data.Tables.TableEntity" />'s
            <see cref="T:System.BinaryData" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.InvalidOperationException">Value associated with given <paramref name="key" /> is not of type byte array.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.GetBinary(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Data.Tables.TableEntity" />'s
            <see cref="T:System.Byte" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.InvalidOperationException">Value associated with given <paramref name="key" /> is not of type byte array.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.GetBoolean(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Data.Tables.TableEntity" />'s
            <see cref="T:System.String" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.InvalidOperationException">Value associated with given <paramref name="key" /> is not of type <see cref="T:System.Boolean" />.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.GetDateTime(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Data.Tables.TableEntity" />'s
            <see cref="T:System.DateTime" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.InvalidOperationException">Value associated with given <paramref name="key" /> is not of type <see cref="T:System.DateTime" />.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.GetDateTimeOffset(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Data.Tables.TableEntity" />'s
            <see cref="T:System.DateTimeOffset" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.InvalidOperationException">Value associated with given <paramref name="key" /> is not of type <see cref="T:System.DateTimeOffset" />.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.GetDouble(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Data.Tables.TableEntity" />'s
            <see cref="T:System.Double" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.InvalidOperationException">Value associated with given <paramref name="key" /> is not of type <see cref="T:System.Double" />.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.GetGuid(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Data.Tables.TableEntity" />'s
            <see cref="T:System.Guid" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.InvalidOperationException">Value associated with given <paramref name="key" /> is not of type <see cref="T:System.Guid" />.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.GetInt32(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Data.Tables.TableEntity" />'s
            <see cref="T:System.Int32" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.InvalidOperationException">Value associated with given <paramref name="key" /> is not of type <see cref="T:System.Int32" />.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.GetInt64(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Data.Tables.TableEntity" />'s
            <see cref="T:System.Int64" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.InvalidOperationException">Value associated with given <paramref name="key" /> is not of type <see cref="T:System.Int64" />.</exception>
        </member>
        <member name="P:Azure.Data.Tables.TableEntity.Item(System.String)">
            <summary>
            Gets or sets the entity's property, given the name of the property.
            </summary>
            <param name="key">A string containing the name of the property.</param>
            <returns>The property value typed as an object.</returns>
        </member>
        <member name="P:Azure.Data.Tables.TableEntity.Keys">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary><returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:Azure.Data.Tables.TableEntity.System#Collections#Generic#IDictionary{System#String,System#Object}#Values">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
        </member>
        <member name="P:Azure.Data.Tables.TableEntity.Count">
            <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:Azure.Data.Tables.TableEntity.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly">
            <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.Add(System.String,System.Object)">
            <summary>Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary><param name="key">The object to use as the key of the element to add.</param><param name="value">The object to use as the value of the element to add.</param><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception><exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.ContainsKey(System.String)">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.</summary><param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param><returns><see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, <see langword="false" />.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.Remove(System.String)">
            <summary>Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary><param name="key">The key of the element to remove.</param><returns><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.  This method also returns <see langword="false" /> if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.TryGetValue(System.String,System.Object@)">
            <summary>Gets the value associated with the specified key.</summary><param name="key">The key whose value to get.</param><param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param><returns><see langword="true" /> if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.Clear">
            <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary><exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception><exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator">
            <summary>
            Gets the enumerator for the <see cref="T:Azure.Data.Tables.TableEntity" /> properties.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator for the <see cref="T:Azure.Data.Tables.TableEntity" /> properties.
            </summary>
        </member>
        <member name="T:Azure.Data.Tables.TableOdataFilter">
            <summary>
            The <see cref="T:Azure.Data.Tables.TableOdataFilter" /> class is used to help construct valid OData filter
            expressions, like the kind used by <see cref="M:Azure.Data.Tables.TableClient.Query``1(System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />,
            <see cref="M:Azure.Data.Tables.TableClient.QueryAsync``1(System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />,
            <see cref="M:Azure.Data.Tables.TableServiceClient.Query(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />, and
            <see cref="M:Azure.Data.Tables.TableServiceClient.QueryAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />,
            by automatically replacing, quoting, and escaping interpolated parameters.
            For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/querying-tables-and-entities#constructing-filter-strings">Constructing Filter Strings</see>.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableOdataFilter.Create(System.FormattableString)">
            <summary>
            Create an OData filter expression from an interpolated string.  The interpolated values will be quoted and escaped as necessary.
            </summary>
            <param name="filter">An interpolated filter string.</param>
            <returns>A valid OData filter expression.</returns>
        </member>
        <member name="T:Azure.Data.Tables.TableServiceClient">
            <summary>
            The <see cref="T:Azure.Data.Tables.TableServiceClient" /> provides synchronous and asynchronous methods to perform table level operations with Azure Tables hosted in either Azure storage accounts or Azure Cosmos DB table API.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableServiceClient.SharedKeyCredential">
            <summary>
            Gets the The <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" /> used to authenticate and generate SAS.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableServiceClient.AccountName">
            <summary>
            The name of the table account with which this client instance will interact.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableServiceClient.Uri">
            <summary>
            The Uri for the table account.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.#ctor(System.Uri,Azure.AzureSasCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableServiceClient" /> using the specified <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" /> containing a shared access signature (SAS)
            token credential.
            </summary>
            <param name="endpoint">
            A <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net/" or "https://{account_name}.table.cosmos.azure.com/".
            </param>
            <param name="credential">The shared access signature credential used to sign requests.
            See <see cref="M:Azure.Data.Tables.TableServiceClient.GenerateSasUri(Azure.Data.Tables.Sas.TableAccountSasPermissions,Azure.Data.Tables.Sas.TableAccountSasResourceTypes,System.DateTimeOffset)" /> for creating a SAS token.</param>
            <exception cref="T:System.ArgumentException"><paramref name="endpoint" /> does not start with 'https'.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="credential" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableServiceClient" /> using the specified connection string.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
             <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.#ctor(System.Uri,Azure.Data.Tables.TableClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableServiceClient" /> using the specified <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" /> containing a shared access signature (SAS)
            token credential. See <see cref="M:Azure.Data.Tables.TableServiceClient.GenerateSasUri(Azure.Data.Tables.Sas.TableAccountSasPermissions,Azure.Data.Tables.Sas.TableAccountSasResourceTypes,System.DateTimeOffset)" /> for creating a SAS token.
            </summary>
            <param name="endpoint">
            A <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net/" or "https://{account_name}.table.cosmos.azure.com/".
            </param>
            <param name="options">
            Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="endpoint" /> does not start with 'https'.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="endpoint" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Data.Tables.TableClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableServiceClient" /> using the specified <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" />.
            </summary>
            <param name="endpoint">
            A <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net/" or "https://{account_name}.table.cosmos.azure.com/".
            </param>
            <param name="credential">The shared access signature credential used to sign requests.</param>
            <param name="options">
            Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="endpoint" /> does not start with 'https'.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="endpoint" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.#ctor(System.Uri,Azure.Data.Tables.TableSharedKeyCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableServiceClient" /> using the specified table service <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" /> and <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" />.
            </summary>
            <param name="endpoint">
            A <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net/" or "https://{account_name}.table.cosmos.azure.com/".
            </param>
            <param name="credential">The shared key credential used to sign requests.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.#ctor(System.Uri,Azure.Data.Tables.TableSharedKeyCredential,Azure.Data.Tables.TableClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableServiceClient" /> using the specified table service <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" /> and <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" />.
            </summary>
            <param name="endpoint">
            A <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net/" or "https://{account_name}.table.cosmos.azure.com/".
            </param>
            <param name="credential">The shared key credential used to sign requests.</param>
            <param name="options">
            Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.#ctor(System.String,Azure.Data.Tables.TableClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableServiceClient" /> using the specified connection string.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
             <param name="options">
             Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
             </param>
             <exception cref="T:System.ArgumentNullException"><paramref name="connectionString" /> is null.</exception>
             <exception cref="T:System.InvalidOperationException"><paramref name="connectionString" /> is invalid.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Data.Tables.TableClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableServiceClient" /> using the specified <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" />.
            </summary>
            <param name="endpoint">
            A <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net/" or "https://{account_name}.table.cosmos.azure.com/".
            </param>
            <param name="tokenCredential">The <see cref="T:Azure.Core.TokenCredential" /> used to authorize requests.</param>
            <param name="options">
            Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="endpoint" /> or <paramref name="tokenCredential" /> is null.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.#ctor(Azure.Data.Tables.TableRestClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableServiceClient" />
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableServiceClient" />
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.GetSasBuilder(Azure.Data.Tables.Sas.TableAccountSasPermissions,Azure.Data.Tables.Sas.TableAccountSasResourceTypes,System.DateTimeOffset)">
            <summary>
            Gets a <see cref="T:Azure.Data.Tables.Sas.TableAccountSasBuilder" /> instance scoped to the current account.
            </summary>
            <param name="permissions"><see cref="T:Azure.Data.Tables.Sas.TableAccountSasPermissions" /> containing the allowed permissions.</param>
            <param name="resourceTypes"><see cref="T:Azure.Data.Tables.Sas.TableAccountSasResourceTypes" /> containing the accessible resource types.</param>
            <param name="expiresOn">The time at which the shared access signature becomes invalid.</param>
            <returns>An instance of <see cref="T:Azure.Data.Tables.Sas.TableAccountSasBuilder" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.GetSasBuilder(System.String,Azure.Data.Tables.Sas.TableAccountSasResourceTypes,System.DateTimeOffset)">
            <summary>
            Gets a <see cref="T:Azure.Data.Tables.Sas.TableAccountSasBuilder" /> instance scoped to the current table.
            </summary>
            <param name="rawPermissions">The permissions associated with the shared access signature. This string should contain one or more of the following permission characters in this order: "racwdl".</param>
            <param name="resourceTypes"><see cref="T:Azure.Data.Tables.Sas.TableAccountSasResourceTypes" /> containing the accessible resource types.</param>
            <param name="expiresOn">The time at which the shared access signature becomes invalid.</param>
            <returns>An instance of <see cref="T:Azure.Data.Tables.Sas.TableAccountSasBuilder" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.GetTableClient(System.String)">
            <summary>
            Gets an instance of a <see cref="T:Azure.Data.Tables.TableClient" /> configured with the current <see cref="T:Azure.Data.Tables.TableServiceClient" /> options, affinitized to the specified <paramref name="tableName" />.
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.QueryAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of tables from the storage account.
            </summary>
            <param name="filter">
            Returns only tables that satisfy the specified filter.
            For example, the following would filter tables with a Name of 'foo': <c>"TableName eq 'foo'"</c>.
            </param>
            <param name="maxPerPage">
            The maximum number of tables that will be returned per page.
            Note: This value does not limit the total number of results if the result is fully enumerated.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>An <see cref="T:Azure.AsyncPageable`1" /> containing a collection of <see cref="T:Azure.Data.Tables.Models.TableItem" />s.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.Query(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of tables from the storage account.
            </summary>
            <param name="filter">
            Returns only tables that satisfy the specified filter.
            For example, the following would filter tables with a Name of 'foo': <c>"TableName eq 'foo'"</c>.
            </param>
            <param name="maxPerPage">
            The maximum number tables that will be returned per page.
            Note: This value does not limit the total number of results if the result is fully enumerated.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>An <see cref="T:Azure.Pageable`1" /> containing a collection of <see cref="T:Azure.Data.Tables.Models.TableItem" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.QueryAsync(System.FormattableString,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of tables from the storage account.
            </summary>
            <param name="filter">
            Returns only tables that satisfy the specified filter expression.
            For example, the following would filter tables with a Name of 'foo': <c>"TableName eq {someStringVariable}"</c>.
            The filter string will be properly quoted and escaped.
            </param>
            <param name="maxPerPage">
            The maximum number of entities that will be returned per page.
            Note: This value does not limit the total number of results if the result is fully enumerated.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>An <see cref="T:Azure.AsyncPageable`1" /> containing a collection of <see cref="T:Azure.Data.Tables.Models.TableItem" />s.</returns>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.Query(System.FormattableString,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of tables from the storage account.
            </summary>
            <param name="filter">
            Returns only tables that satisfy the specified filter expression.
            For example, the following would filter tables with a Name of 'foo': <c>"TableName eq {someStringVariable}"</c>.
            The filter string will be properly quoted and escaped.
            </param>
            <param name="maxPerPage">
            The maximum number of entities that will be returned per page.
            Note: This value does not limit the total number of results if the result is fully enumerated.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>An <see cref="T:Azure.Pageable`1" /> containing a collection of <see cref="T:Azure.Data.Tables.Models.TableItem" />.</returns>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.QueryAsync(System.Linq.Expressions.Expression{System.Func{Azure.Data.Tables.Models.TableItem,System.Boolean}},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of tables from the storage account.
            </summary>
            <param name="filter">
            Returns only tables that satisfy the specified filter expression.
            For example, the following expression would filter tables with a Name of 'foo': <c>e =&gt; e.Name == "foo"</c>.
            </param>
            <param name="maxPerPage">
            The maximum number of entities that will be returned per page.
            Note: This value does not limit the total number of results if the result is fully enumerated.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>An <see cref="T:Azure.AsyncPageable`1" /> containing a collection of <see cref="T:Azure.Data.Tables.Models.TableItem" />s.</returns>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.Query(System.Linq.Expressions.Expression{System.Func{Azure.Data.Tables.Models.TableItem,System.Boolean}},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of tables from the storage account.
            </summary>
            <param name="filter">
            Returns only tables that satisfy the specified filter expression.
            For example, the following expression would filter tables with a Name of 'foo': <c>e =&gt; e.Name == "foo"</c>.
            </param>
            <param name="maxPerPage">
            The maximum number of entities that will be returned per page.
            Note: This value does not limit the total number of results if the result is fully enumerated.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>An <see cref="T:Azure.Pageable`1" /> containing a collection of <see cref="T:Azure.Data.Tables.Models.TableItem" />.</returns>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.CreateTable(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a table on the service.
            </summary>
            <param name="tableName">The name of table to create.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>A <see cref="T:Azure.Response`1" /> containing properties of the table.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.CreateTableAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a table on the service.
            </summary>
            <param name="tableName">The name of table to create.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>A <see cref="T:Azure.Response`1" /> containing properties of the table.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.CreateTableIfNotExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a table on the service.
            </summary>
            <param name="tableName">The name of the table to create.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>A <see cref="T:Azure.Response`1" /> containing properties of the table. If the table already exists, then <see cref="P:Azure.Response.Status" /> is 409. The <see cref="T:Azure.Response" /> can be accessed via the GetRawResponse() method.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.CreateTableIfNotExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a table on the service.
            </summary>
            <param name="tableName">The name of the table to create.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>A <see cref="T:Azure.Response`1" /> containing properties of the table. If the table already exists, then <see cref="P:Azure.Response.Status" /> is 409. The <see cref="T:Azure.Response" /> can be accessed via the GetRawResponse() method.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.DeleteTable(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a table on the service.
            </summary>
            <param name="tableName">The name of the table to delete.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.DeleteTableAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a table on the service.
            </summary>
            <param name="tableName">The name of the table to delete.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.SetProperties(Azure.Data.Tables.Models.TableServiceProperties,System.Threading.CancellationToken)">
            <summary> Sets properties for an account's Table service endpoint, including properties for Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="properties"> The Table Service properties. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.SetPropertiesAsync(Azure.Data.Tables.Models.TableServiceProperties,System.Threading.CancellationToken)">
            <summary> Sets properties for an account's Table service endpoint, including properties for Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="properties"> The Table Service properties. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.GetProperties(System.Threading.CancellationToken)">
            <summary> Gets the properties of an account's Table service, including properties for Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The <see cref="T:Azure.Response`1" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.GetPropertiesAsync(System.Threading.CancellationToken)">
            <summary> Gets the properties of an account's Table service, including properties for Analytics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The <see cref="T:Azure.Response`1" /> indicating the result of the operation.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.GetStatisticsAsync(System.Threading.CancellationToken)">
            <summary> Retrieves statistics related to replication for the Table service. It is only available on the secondary location endpoint when read-access geo-redundant replication is enabled for the account. </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.GetStatistics(System.Threading.CancellationToken)">
            <summary> Retrieves statistics related to replication for the Table service. It is only available on the secondary location endpoint when read-access geo-redundant replication is enabled for the account. </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.GenerateSasUri(Azure.Data.Tables.Sas.TableAccountSasPermissions,Azure.Data.Tables.Sas.TableAccountSasResourceTypes,System.DateTimeOffset)">
             <summary>
             The <see cref="M:Azure.Data.Tables.TableServiceClient.GenerateSasUri(Azure.Data.Tables.Sas.TableAccountSasPermissions,Azure.Data.Tables.Sas.TableAccountSasResourceTypes,System.DateTimeOffset)" />
             returns a <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" /> that generates a Table Service
             Shared Access Signature (SAS) Uri based on the Client properties
             and parameters passed.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a Service SAS</see>.
             </summary>
             <param name="permissions"> Specifies the list of permissions to be associated with the SAS.
             See <see cref="T:Azure.Data.Tables.Sas.TableSasPermissions" />.
             </param>
             <param name="resourceTypes"> Specifies the resource types that will can be accessed with the SAS.</param>
             <param name="expiresOn">
             Required. Specifies the time at which the SAS becomes invalid. This field
             must be omitted if it has been specified in an associated stored access policy.
             </param>
             <returns> A <see cref="T:Azure.Data.Tables.Sas.TableAccountSasBuilder" /> on successfully deleting. </returns>
             <remarks> An <see cref="T:System.Exception" /> will be thrown if a failure occurs. </remarks>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.GenerateSasUri(Azure.Data.Tables.Sas.TableAccountSasBuilder)">
             <summary>
             The <see cref="M:Azure.Data.Tables.TableServiceClient.GenerateSasUri(Azure.Data.Tables.Sas.TableAccountSasBuilder)" /> returns a
             <see cref="P:Azure.Data.Tables.TableServiceClient.Uri" /> that generates a Table Service SAS Uri based
             on the Client properties and builder passed.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a Service SAS</see>
             </summary>
             <param name="builder"> Used to generate a Shared Access Signature (SAS). </param>
             <returns> A <see cref="T:Azure.Data.Tables.Sas.TableAccountSasBuilder" /> on successfully deleting. </returns>
             <remarks> An <see cref="T:System.Exception" /> will be thrown if a failure occurs. </remarks>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.CreateQueryFilter(System.Linq.Expressions.Expression{System.Func{Azure.Data.Tables.Models.TableItem,System.Boolean}})">
            <summary>
            Creates an OData filter query string from the provided expression.
            </summary>
            <param name="filter">A filter expression.</param>
            <returns>The string representation of the filter expression.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableServiceClient.CreateQueryFilter(System.FormattableString)">
            <summary>
            Create an OData filter expression from an interpolated string.  The interpolated values will be quoted and escaped as necessary.
            </summary>
            <param name="filter">An interpolated filter string.</param>
            <returns>A valid OData filter expression.</returns>
        </member>
        <member name="T:Azure.Data.Tables.TableSharedKeyCredential">
            <summary>
            A <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" /> is a credential backed by
            a Storage Account's name and one of its access keys.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableSharedKeyCredential.AccountName">
            <summary>
            Gets the name of the Storage Account.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableSharedKeyCredential.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Azure.Data.Tables.TableSharedKeyCredential" /> class.
            </summary>
            <param name="accountName">The name of the Storage Account.</param>
            <param name="accountKey">A Storage Account access key.</param>
        </member>
        <member name="M:Azure.Data.Tables.TableSharedKeyCredential.SetAccountKey(System.String)">
            <summary>
            Update the Storage Account's access key.  This intended to be used
            when you've regenerated your Storage Account's access keys and want
            to update long lived clients.
            </summary>
            <param name="accountKey">A Storage Account access key.</param>
        </member>
        <member name="M:Azure.Data.Tables.TableSharedKeyCredential.ComputeHMACSHA256(System.String)">
            <summary>
            Generates a base-64 hash signature string for an HTTP request or
            for a SAS.
            </summary>
            <param name="message">The message to sign.</param>
            <returns>The signed message.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableSharedKeyCredential.ComputeSasSignature(Azure.Data.Tables.TableSharedKeyCredential,System.String)">
            <summary>
            Generates a base-64 hash signature string for an HTTP request or
            for a SAS.
            </summary>
            <param name="credential">The credential.</param>
            <param name="message">The message to sign.</param>
            <returns>The signed message.</returns>
        </member>
        <member name="T:Azure.Data.Tables.TableSharedKeyPipelinePolicy">
            <summary>
            HttpPipelinePolicy to sign requests using an Azure Storage shared key.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableSharedKeyPipelinePolicy.#ctor(Azure.Data.Tables.TableSharedKeyCredential)">
            <summary>
            Create a new SharedKeyPipelinePolicy
            </summary>
            <param name="credentials">SharedKeyCredentials to authenticate requests.</param>
        </member>
        <member name="M:Azure.Data.Tables.TableSharedKeyPipelinePolicy.OnSendingRequest(Azure.Core.HttpMessage)">
            <summary>
            Sign the request using the shared key credentials.
            </summary>
            <param name="message">The message with the request to sign.</param>
        </member>
        <member name="T:Azure.Data.Tables.TableTransactionAction">
            <summary>
            Defines an transaction action to be included as part of a batch operation.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableTransactionAction.ActionType">
            <summary>
            The operation type to be applied to the <see cref="P:Azure.Data.Tables.TableTransactionAction.Entity" />.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableTransactionAction.Entity">
            <summary>
            The table entity to which the batch operation will be applied.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableTransactionAction.ETag">
            <summary>
            The optional <see cref="P:Azure.Data.Tables.TableTransactionAction.ETag" /> to be used for the entity operation.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableTransactionAction.#ctor(Azure.Data.Tables.TableTransactionActionType,Azure.Data.Tables.ITableEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableTransactionAction" />
            </summary>
            <param name="actionType"> The operation type to be applied to the <paramref name="entity" /></param>
            <param name="entity">The table entity to which the <paramref name="actionType" /> will be applied.</param>
        </member>
        <member name="M:Azure.Data.Tables.TableTransactionAction.#ctor(Azure.Data.Tables.TableTransactionActionType,Azure.Data.Tables.ITableEntity,Azure.ETag)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableTransactionAction" />
            </summary>
            <param name="actionType"> The operation type to be applied to the <paramref name="entity" /></param>
            <param name="entity">The table entity to which the <paramref name="actionType" /> will be applied.</param>
            <param name="etag"> The <see cref="P:Azure.Data.Tables.TableTransactionAction.ETag" /> to apply to this action.</param>
        </member>
        <member name="T:Azure.Data.Tables.TableTransactionActionType">
            <summary>
            The type of operation to be executed on a table entity as part of a table transactional batch operations.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.TableTransactionActionType.Add">
            <summary>
            Add the entity to the table. This is equivalent to <see cref="M:Azure.Data.Tables.TableClient.AddEntity``1(``0,System.Threading.CancellationToken)" />.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.TableTransactionActionType.UpdateMerge">
            <summary>
            Update the entity in <see cref="F:Azure.Data.Tables.TableUpdateMode.Merge" /> mode. This is equivalent to <see cref="M:Azure.Data.Tables.TableClient.UpdateEntity``1(``0,Azure.ETag,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)" />
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.TableTransactionActionType.UpdateReplace">
            <summary>
            Update the entity in <see cref="F:Azure.Data.Tables.TableUpdateMode.Replace" /> mode. This is equivalent to <see cref="M:Azure.Data.Tables.TableClient.UpdateEntity``1(``0,Azure.ETag,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)" />
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.TableTransactionActionType.Delete">
            <summary>
            Delete the entity. This is equivalent to <see cref="M:Azure.Data.Tables.TableClient.DeleteEntity(System.String,System.String,Azure.ETag,System.Threading.CancellationToken)" />
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.TableTransactionActionType.UpsertMerge">
            <summary>
            Upsert the entity in <see cref="F:Azure.Data.Tables.TableUpdateMode.Merge" /> mode. This is equivalent to <see cref="M:Azure.Data.Tables.TableClient.UpsertEntity``1(``0,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)" />
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.TableTransactionActionType.UpsertReplace">
            <summary>
            Upsert the entity in <see cref="F:Azure.Data.Tables.TableUpdateMode.Replace" /> mode. This is equivalent to <see cref="M:Azure.Data.Tables.TableClient.UpsertEntity``1(``0,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)" />
            </summary>
        </member>
        <member name="T:Azure.Data.Tables.TableTransactionFailedException">
             <summary>
            
             </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableTransactionFailedException.FailedTransactionActionIndex">
            <summary>
            The index position of the <see cref="T:Azure.Data.Tables.TableTransactionAction" /> collection submitted to <see cref="M:Azure.Data.Tables.TableClient.SubmitTransaction(System.Collections.Generic.IEnumerable{Azure.Data.Tables.TableTransactionAction},System.Threading.CancellationToken)" /> or
            <see cref="M:Azure.Data.Tables.TableClient.SubmitTransactionAsync(System.Collections.Generic.IEnumerable{Azure.Data.Tables.TableTransactionAction},System.Threading.CancellationToken)" /> which caused the transaction to fail.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableTransactionFailedException.#ctor(Azure.RequestFailedException)">
            <summary>
            Initializes a new instances of a <see cref="T:Azure.Data.Tables.TableTransactionFailedException" />.
            </summary>
            <param name="requestFailedException"> The <see cref="T:Azure.RequestFailedException" /> related to this exception.</param>
        </member>
        <member name="M:Azure.Data.Tables.TableTransactionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</summary><param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param><param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param><exception cref="T:System.ArgumentNullException"><paramref name="info" /> is <see langword="null" />.</exception><exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).</exception>
        </member>
        <member name="T:Azure.Data.Tables.TableUpdateMode">
            <summary>
            Defines the behavior of <see cref="M:Azure.Data.Tables.TableClient.UpdateEntity``1(``0,Azure.ETag,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)" />, \
            <see cref="M:Azure.Data.Tables.TableClient.UpdateEntityAsync``1(``0,Azure.ETag,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)" />,
            <see cref="M:Azure.Data.Tables.TableClient.UpsertEntity``1(``0,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)" />, and
            <see cref="M:Azure.Data.Tables.TableClient.UpsertEntityAsync``1(``0,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)" />.
            </summary>
            <remarks>
            To expand on the behavior of the modes, consider a scenario where the table already contains an entity with 2 user defined properties named "Price" and "Description"
            and the entity passed to the method only defines the "Price" property.
            If the <see cref="F:Azure.Data.Tables.TableUpdateMode.Replace" /> mode is specified, the entity will be replaced with the specified version containing only the "Price" property.
            We have effectively updated the "Price" property and removed the "Description" property.
            If the <see cref="F:Azure.Data.Tables.TableUpdateMode.Merge" /> mode is specified, the existing entity is merged with the properties defined in entity passed to the method.
            In this case, we have effectively updated the "Price" property and left the "Description" property unchanged.
            </remarks>
        </member>
        <member name="F:Azure.Data.Tables.TableUpdateMode.Merge">
            <summary>
            Merge the properties of the supplied entity with the entity in the table.
            </summary>
        </member>
        <member name="F:Azure.Data.Tables.TableUpdateMode.Replace">
            <summary>
            Replace the entity in the table with the supplied entity.
            </summary>
        </member>
        <member name="T:Azure.Data.Tables.TableUriBuilder">
            <summary>
            <see cref="T:Azure.Data.Tables.TableUriBuilder" /> is used to generate a Shared Access
            Signature (SAS) for an Azure Storage table.
            For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas" />.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableUriBuilder.Scheme">
            <summary>
            Gets or sets the scheme name of the URI.
            Example: "https"
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableUriBuilder.Host">
             <summary>
             Gets or sets the Domain Name System (DNS) host name or IP address
             of a server.
            
             Example: "account.table.core.windows.net"
             </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableUriBuilder.Port">
            <summary>
            Gets or sets the port number of the URI.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableUriBuilder.AccountName">
            <summary>
            Gets or sets the Azure Table account name.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableUriBuilder.Tablename">
            <summary>
            Gets or sets the name of the Azure Table.  The value defaults
            to <see cref="F:System.String.Empty" /> if not present in the
            <see cref="T:System.Uri" />.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableUriBuilder.Sas">
            <summary>
            Gets or sets the Shared Access Signature query parameters, or null
            if not present in the <see cref="T:System.Uri" />.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.TableUriBuilder.Query">
            <summary>
            Gets or sets any query information included in the URI that's not
            relevant to addressing Azure Table resources.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableUriBuilder.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableUriBuilder" />
            class with the specified <see cref="T:System.Uri" />.
            </summary>
            <param name="uri">
            The <see cref="T:System.Uri" /> to a Table resource.
            </param>
        </member>
        <member name="M:Azure.Data.Tables.TableUriBuilder.ToUri">
            <summary>
            Returns the <see cref="T:System.Uri" /> constructed from the
            <see cref="T:Azure.Data.Tables.TableUriBuilder" />'s fields. The <see cref="P:System.Uri.Query" />
            property contains the SAS and additional query parameters.
            </summary>
        </member>
        <member name="M:Azure.Data.Tables.TableUriBuilder.ToString">
            <summary>
            Returns the display string for the specified
            <see cref="T:Azure.Data.Tables.TableUriBuilder" /> instance.
            </summary>
            <returns>
            The display string for the specified <see cref="T:Azure.Data.Tables.TableUriBuilder" />
            instance.
            </returns>
        </member>
        <member name="M:Azure.Data.Tables.UriQueryParamsCollection.#ctor(System.String)">
            <summary>
            Takes encoded query params string, output decoded params map.
            </summary>
            <param name="encodedQueryParamString"></param>
        </member>
        <member name="T:Azure.Core.MemoryResponse">
            <summary>
            A Response that can be constructed in memory without being tied to a
            live request.
            </summary>
        </member>
        <member name="P:Azure.Core.MemoryResponse.Status">
            <summary>
            Gets the HTTP status code.
            </summary>
        </member>
        <member name="P:Azure.Core.MemoryResponse.ReasonPhrase">
            <summary>
            Gets the HTTP reason phrase.
            </summary>
        </member>
        <member name="P:Azure.Core.MemoryResponse.ContentStream">
            <summary>
            Gets the contents of HTTP response. Returns <c>null</c> for responses without content.
            </summary>
        </member>
        <member name="P:Azure.Core.MemoryResponse.ClientRequestId">
            <summary>
            Gets the client request id that was sent to the server as <c>x-ms-client-request-id</c> headers.
            </summary>
        </member>
        <member name="M:Azure.Core.MemoryResponse.SetStatus(System.Int32)">
            <summary>
            Set the Response <see cref="P:Azure.Core.MemoryResponse.Status" />.
            </summary>
            <param name="status">The Response status.</param>
        </member>
        <member name="M:Azure.Core.MemoryResponse.SetReasonPhrase(System.String)">
            <summary>
            Set the Response <see cref="P:Azure.Core.MemoryResponse.ReasonPhrase" />.
            </summary>
            <param name="reasonPhrase">The Response ReasonPhrase.</param>
        </member>
        <member name="M:Azure.Core.MemoryResponse.SetContent(System.Byte[])">
            <summary>
            Set the Response <see cref="P:Azure.Core.MemoryResponse.ContentStream" />.
            </summary>
            <param name="content">The response content.</param>
        </member>
        <member name="M:Azure.Core.MemoryResponse.SetContent(System.String)">
            <summary>
            Set the Response <see cref="P:Azure.Core.MemoryResponse.ContentStream" />.
            </summary>
            <param name="content">The response content.</param>
        </member>
        <member name="M:Azure.Core.MemoryResponse.Dispose">
            <summary>
            Dispose the Response.
            </summary>
        </member>
        <member name="M:Azure.Core.MemoryResponse.SetHeader(System.String,System.String)">
            <summary>
            Set the value of a response header (and overwrite any existing
            values).
            </summary>
            <param name="name">The name of the response header.</param>
            <param name="value">The response header value.</param>
        </member>
        <member name="M:Azure.Core.MemoryResponse.SetHeader(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Set the values of a response header (and overwrite any existing
            values).
            </summary>
            <param name="name">The name of the response header.</param>
            <param name="values">The response header values.</param>
        </member>
        <member name="M:Azure.Core.MemoryResponse.AddHeader(System.String,System.String)">
            <summary>
            Add a response header value.
            </summary>
            <param name="name">The name of the response header.</param>
            <param name="value">The response header value.</param>
        </member>
        <member name="M:Azure.Core.MemoryResponse.ContainsHeader(System.String)">
            <summary>
            Returns <c>true</c> if the header is stored in the collection.
            </summary><param name="name">The header name.</param><returns><c>true</c> if the specified header is stored in the collection, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Core.MemoryResponse.EnumerateHeaders">
            <summary>
            Returns an iterator for enumerating <see cref="T:Azure.Core.HttpHeader" /> in the response.
            </summary><returns>The <see cref="T:System.Collections.Generic.IEnumerable`1" /> enumerating <see cref="T:Azure.Core.HttpHeader" /> in the response.</returns>
        </member>
        <member name="M:Azure.Core.MemoryResponse.TryGetHeader(System.String,System.String@)">
            <summary>
            Returns header value if the header is stored in the collection. If header has multiple values they are going to be joined with a comma.
            </summary><param name="name">The header name.</param><param name="value">The reference to populate with value.</param><returns><c>true</c> if the specified header is stored in the collection, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Core.MemoryResponse.TryGetHeaderValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
            <summary>
            Returns header values if the header is stored in the collection.
            </summary><param name="name">The header name.</param><param name="values">The reference to populate with values.</param><returns><c>true</c> if the specified header is stored in the collection, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Azure.Core.MemoryTransport">
            <summary>
            An empty transport protocol that never sends anything over the wire.
            It allows multipart sub-operations to run through a pipeline to and have policies like Authentication prepare the Request.
            </summary>
        </member>
        <member name="M:Azure.Core.MemoryTransport.CreateRequest">
            <summary>
            Creates a new transport specific instance of <see cref="T:Azure.Core.Request" />. This should not be called directly, <see cref="M:Azure.Core.Pipeline.HttpPipeline.CreateRequest" /> or
            <see cref="M:Azure.Core.Pipeline.HttpPipeline.CreateMessage" /> should be used instead.
            </summary><returns></returns>
        </member>
        <member name="M:Azure.Core.MemoryTransport.Process(Azure.Core.HttpMessage)">
            <summary>
            Sends the request contained by the <paramref name="message" /> and sets the <see cref="P:Azure.Core.HttpMessage.Response" /> property to received response synchronously.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> containing request and response.</param>
        </member>
        <member name="M:Azure.Core.MemoryTransport.ProcessAsync(Azure.Core.HttpMessage)">
            <summary>
            Sends the request contained by the <paramref name="message" /> and sets the <see cref="P:Azure.Core.HttpMessage.Response" /> property to received response asynchronously.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> containing request and response.</param>
        </member>
        <member name="T:Azure.Core.MultipartContent">
            <summary>
             Provides a container for content encoded using multipart/form-data MIME type.
            </summary>
        </member>
        <member name="M:Azure.Core.MultipartContent.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Azure.Core.MultipartContent" /> class.
            </summary>
            <param name="subtype">The multipart sub type.</param>
            <param name="boundary">The boundary string for the multipart form data content.</param>
        </member>
        <member name="M:Azure.Core.MultipartContent.ApplyToRequest(Azure.Core.Request)">
            <summary>
             Add content type header to the request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Azure.Core.MultipartContent.Add(Azure.Core.RequestContent)">
            <summary>
             Add HTTP content to a collection of RequestContent objects that
             get serialized to multipart/form-data MIME type.
            </summary>
            <param name="content">The Request content to add to the collection.</param>
        </member>
        <member name="M:Azure.Core.MultipartContent.Add(Azure.Core.RequestContent,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
             Add HTTP content to a collection of RequestContent objects that
             get serialized to multipart/form-data MIME type.
            </summary>
            <param name="content">The Request content to add to the collection.</param>
            <param name="headers">The headers to add to the collection.</param>
        </member>
        <member name="M:Azure.Core.MultipartContent.Dispose">
            <summary>
             Frees resources held by the <see cref="T:Azure.Core.MultipartContent" /> object.
            </summary>
        </member>
        <member name="M:Azure.Core.MultipartContent.WriteTo(System.IO.Stream,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="stream"></param>
             <param name="cancellationToken"></param>
            
        </member>
        <member name="M:Azure.Core.MultipartContent.WriteToAsync(System.IO.Stream,System.Threading.CancellationToken)">
             <summary>
            
             </summary>
             <param name="stream"></param>
             <param name="cancellation"></param>
             <returns></returns>
        </member>
        <member name="M:Azure.Core.MultipartContent.TryComputeLength(System.Int64@)">
            <summary>
            Attempts to compute the length of the underlying content, if available.
            </summary>
            <param name="length">The length of the underlying data.</param>
        </member>
        <member name="T:Azure.Core.MultipartFormDataContent">
            <summary>
             Provides a container for content encoded using multipart/form-data MIME type.
            </summary>
        </member>
        <member name="M:Azure.Core.MultipartFormDataContent.#ctor">
            <summary>
             Initializes a new instance of the <see cref="T:Azure.Core.MultipartFormDataContent" /> class.
            </summary>
        </member>
        <member name="M:Azure.Core.MultipartFormDataContent.#ctor(System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Azure.Core.MultipartFormDataContent" /> class.
            </summary>
            <param name="boundary">The boundary string for the multipart form data content.</param>
        </member>
        <member name="M:Azure.Core.MultipartFormDataContent.Add(Azure.Core.RequestContent)">
            <summary>
             Add HTTP content to a collection of RequestContent objects that
             get serialized to multipart/form-data MIME type.
            </summary>
            <param name="content">The Request content to add to the collection.</param>
        </member>
        <member name="M:Azure.Core.MultipartFormDataContent.Add(Azure.Core.RequestContent,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
             Add HTTP content to a collection of RequestContent objects that
             get serialized to multipart/form-data MIME type.
            </summary>
            <param name="content">The Request content to add to the collection.</param>
            <param name="headers">The headers to add to the collection.</param>
        </member>
        <member name="M:Azure.Core.MultipartFormDataContent.Add(Azure.Core.RequestContent,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
             Add HTTP content to a collection of RequestContent objects that
             get serialized to multipart/form-data MIME type.
            </summary>
            <param name="content">The Request content to add to the collection.</param>
            <param name="name">The name for the request content to add.</param>
            <param name="headers">The headers to add to the collection.</param>
        </member>
        <member name="M:Azure.Core.MultipartFormDataContent.Add(Azure.Core.RequestContent,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
             Add HTTP content to a collection of RequestContent objects that
             get serialized to multipart/form-data MIME type.
            </summary>
            <param name="content">The Request content to add to the collection.</param>
            <param name="name">The name for the request content to add.</param>
            <param name="fileName">The file name for the request content to add to the collection.</param>
            <param name="headers">The headers to add to the collection.</param>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T" /> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity" /> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1" /> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> amount of data was written to the output <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" />.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count" /> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="T:Azure.Core.AuthorizationChallengeParser">
            <summary>
            A helper class for parsing Authorization challenge headers.
            </summary>
        </member>
        <member name="M:Azure.Core.AuthorizationChallengeParser.GetChallengeParameterFromResponse(Azure.Response,System.String,System.String)">
            <summary>
            Parses the specified parameter from a challenge hearder found in the specified <see cref="T:Azure.Response" />.
            </summary>
            <param name="response">The <see cref="T:Azure.Response" /> to parse.</param>
            <param name="challengeScheme">The challenge scheme containing the <paramref name="challengeParameter" />. For example: "Bearer"</param>
            <param name="challengeParameter">The parameter key name containing the value to return.</param>
            <returns>The value of the parameter name specified in <paramref name="challengeParameter" /> if it is found in the specified <paramref name="challengeScheme" />.</returns>
        </member>
        <member name="M:Azure.Core.AuthorizationChallengeParser.TryGetNextChallenge(System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@)">
            <summary>
            Iterates through the challenge schemes present in a challenge header.
            </summary>
            <param name="headerValue">
            The header value which will be sliced to remove the first parsed <paramref name="challengeKey" />.
            </param>
            <param name="challengeKey">The parsed challenge scheme.</param>
            <returns>
            <c>true</c> if a challenge scheme was successfully parsed.
            The value of <paramref name="headerValue" /> should be passed to <see cref="M:Azure.Core.AuthorizationChallengeParser.TryGetNextParameter(System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@,System.Char)" /> to parse the challenge parameters if <c>true</c>.
            </returns>
        </member>
        <member name="M:Azure.Core.AuthorizationChallengeParser.TryGetNextParameter(System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@,System.Char)">
            <summary>
            Iterates through a challenge header value after being parsed by <see cref="M:Azure.Core.AuthorizationChallengeParser.TryGetNextChallenge(System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@)" />.
            </summary>
            <param name="headerValue">The header value after being parsed by <see cref="M:Azure.Core.AuthorizationChallengeParser.TryGetNextChallenge(System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@)" />.</param>
            <param name="paramKey">The parsed challenge parameter key.</param>
            <param name="paramValue">The parsed challenge parameter value.</param>
            <param name="separator">The challenge parameter key / value pair separator. The default is '='.</param>
            <returns>
            <c>true</c> if the next available challenge parameter was successfully parsed.
            <c>false</c> if there are no more parameters for the current challenge scheme or an additional challenge scheme was encountered in the <paramref name="headerValue" />.
            The value of <paramref name="headerValue" /> should be passed again to <see cref="M:Azure.Core.AuthorizationChallengeParser.TryGetNextChallenge(System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@)" /> to attempt to parse any additional challenge schemes if <c>false</c>.
            </returns>
        </member>
        <member name="M:Azure.Core.AzureKeyCredentialPolicy.#ctor(Azure.AzureKeyCredential,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.AzureKeyCredentialPolicy" /> class.
            </summary>
            <param name="credential">The <see cref="T:Azure.AzureKeyCredential" /> used to authenticate requests.</param>
            <param name="name">The name of the key header used for the credential.</param>
            <param name="prefix">The prefix to apply before the credential key. For example, a prefix of "SharedAccessKey" would result in
            a value of "SharedAccessKey {credential.Key}" being stamped on the request header with header key of <paramref name="name" />.</param>
        </member>
        <member name="M:Azure.Core.AzureKeyCredentialPolicy.OnSendingRequest(Azure.Core.HttpMessage)">
            <summary>
            Method is invoked before the request is sent.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> containing the request.</param>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="T:Azure.Core.CallerShouldAuditAttribute">
            <summary>
            Decorates an operation or all operations for a client whose invocation should potentially be audited
            by Azure service implementations.  Auditing could be recommended
            because the operation changes critical service state, creates delegated
            access to a resource, affects data retention, etc.  It's a best guess
            from the service team that the operation should be audited to mitigate
            any potential future issues.
            </summary>
        </member>
        <member name="M:Azure.Core.CallerShouldAuditAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.CallerShouldAuditAttribute" />.
            </summary>
            <param name="reason"> Sets a description or link to the rationale for potentially auditing this operation. </param>
        </member>
        <member name="P:Azure.Core.CallerShouldAuditAttribute.Reason">
            <summary>
            Gets or sets a description or link to the rationale for potentially
            auditing this operation.
            </summary>
        </member>
        <member name="T:Azure.Core.DictionaryHeaders">
            <summary>
            An implementation for manipulating headers on <see cref="T:Azure.Core.Request" />.
            </summary>
        </member>
        <member name="M:Azure.Core.DictionaryHeaders.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Azure.Core.DictionaryHeaders" />
            </summary>
        </member>
        <member name="M:Azure.Core.DictionaryHeaders.AddHeader(System.String,System.String)">
            <summary>
            Adds a header value to the header collection.
            </summary>
            <param name="name">The header name.</param>
            <param name="value">The header value.</param>
        </member>
        <member name="M:Azure.Core.DictionaryHeaders.TryGetHeader(System.String,System.String@)">
            <summary>
            Returns header value if the header is stored in the collection. If the header has multiple values they are going to be joined with a comma.
            </summary>
            <param name="name">The header name.</param>
            <param name="value">The reference to populate with value.</param>
            <returns><c>true</c> if the specified header is stored in the collection, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Core.DictionaryHeaders.TryGetHeaderValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
            <summary>
            Returns header values if the header is stored in the collection.
            </summary>
            <param name="name">The header name.</param>
            <param name="values">The reference to populate with values.</param>
            <returns><c>true</c> if the specified header is stored in the collection, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Core.DictionaryHeaders.ContainsHeader(System.String)">
            <summary>
            Returns <c>true</c> if the header is stored in the collection.
            </summary>
            <param name="name">The header name.</param>
            <returns><c>true</c> if the specified header is stored in the collection, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Core.DictionaryHeaders.SetHeader(System.String,System.String)">
            <summary>
            Sets a header value the header collection.
            </summary>
            <param name="name">The header name.</param>
            <param name="value">The header value.</param>
        </member>
        <member name="M:Azure.Core.DictionaryHeaders.RemoveHeader(System.String)">
            <summary>
            Removes the header from the collection.
            </summary>
            <param name="name">The header name.</param>
        </member>
        <member name="M:Azure.Core.DictionaryHeaders.EnumerateHeaders">
            <summary>
            Returns an iterator enumerating <see cref="T:Azure.Core.HttpHeader" /> in the request.
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.IEnumerable`1" /> enumerating <see cref="T:Azure.Core.HttpHeader" /> in the response.</returns>
        </member>
        <member name="T:Azure.Core.ForwardsClientCallsAttribute">
            <summary>
            Marks methods that call methods on other client and don't need their diagnostics verified.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
            <param name="skipChecks"> Sets whether or not diagnostic scope validation should happen. </param>
        </member>
        <member name="P:Azure.Core.ForwardsClientCallsAttribute.SkipChecks">
            <summary>
            Gets whether or not we should validate DiagnosticScope for this API.
            In the case where there is an internal API that makes the Azure API call and a public API that uses it we need ForwardsClientCalls.
            If the public API will cache the results then the diagnostic scope will not always be created because an Azure API is not always called.
            In this case we need to turn off this validation for this API only.
            </summary>
        </member>
        <member name="T:Azure.Core.HashCodeBuilder">
            <summary>
            Copied from https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/HashCode.cs.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.PropertyName">
            <summary>
            Gets or sets the property name which these hooks should apply to
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.SerializationPath">
            <summary>
            Gets or sets the serialization path of the property in the JSON
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.SerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(Utf8JsonWriter writer);
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.DeserializationValueHook">
            <summary>
            Gets or sets the method name to use when deserializing the property value from the JSON
            private static void DeserializationHook(JsonProperty property, ref TypeOfTheProperty propertyValue); // if the property is required
            private static void DeserializationHook(JsonProperty property, ref Optional&lt;TypeOfTheProperty&gt; propertyValue); // if the property is optional
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.BicepSerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(StringBuilder builder);
            </summary>
        </member>
        <member name="T:Azure.Core.AppContextSwitchHelper">
            <summary>
            Helper for interacting with AppConfig settings and their related Environment variable settings.
            </summary>
        </member>
        <member name="M:Azure.Core.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContexSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
        <member name="T:Azure.Core.AsyncLockWithValue`1">
            <summary>
            Primitive that combines async lock and value cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.GetLockOrValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method that either returns cached value or acquire a lock.
            If one caller has acquired a lock, other callers will be waiting for the lock to be released.
            If value is set, lock is released and all waiters get that value.
            If value isn't set, the next waiter in the queue will get the lock.
            </summary>
            <param name="async"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.HasValue">
            <summary>
            Returns true if lock contains the cached value. Otherwise false.
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.Value">
            <summary>
            Returns cached value if it was set when lock has been created. Throws exception otherwise.
            </summary>
            <exception cref="T:System.InvalidOperationException">Value isn't set.</exception>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.LockOrValue.SetValue(`0)">
            <summary>
            Set value to the cache and to all the waiters.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Value is set already.</exception>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(Azure.Core.ClientOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="options">The customer provided client options object.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients; use default (null)
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(System.String,System.String,Azure.Core.DiagnosticsOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="optionsNamespace">Namespace of the client class, such as Azure.Storage or Azure.AppConfiguration.</param>
            <param name="providerNamespace">Azure Resource Provider namespace of the Azure service SDK is primarily used for.</param>
            <param name="diagnosticsOptions">The customer provided client diagnostics options.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients, use default (null) for old clients
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.AddLink(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds a link to the scope. This must be called before <see cref="M:Azure.Core.Pipeline.DiagnosticScope.Start" /> has been called for the DiagnosticScope.
            </summary>
            <param name="traceparent">The traceparent for the link.</param>
            <param name="tracestate">The tracestate for the link.</param>
            <param name="attributes">Optional attributes to associate with the link.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.SetTraceContext(System.String,System.String)">
            <summary>
            Sets the trace context for the current scope.
            </summary>
            <param name="traceparent">The trace parent to set for the current scope.</param>
            <param name="tracestate">The trace state to set for the current scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.Exception)">
            <summary>
            Marks the scope as failed.
            </summary>
            <param name="exception">The exception to associate with the failed scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.String)">
            <summary>
            Marks the scope as failed with low-cardinality error.type attribute.
            </summary>
            <param name="errorCode">Error code to associate with the failed scope.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            Until Activity Source is no longer considered experimental.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScopeFactory.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates diagnostic scope factory.
            </summary>
            <param name="clientNamespace">The namespace which is used as a prefix for all ActivitySources created by the factory and the name of DiagnosticSource (when used).</param>
            <param name="resourceProviderNamespace">Azure resource provider namespace.</param>
            <param name="isActivityEnabled">Flag indicating if distributed tracing is enabled.</param>
            <param name="suppressNestedClientActivities">Flag indicating if nested Azure SDK activities describing public API calls should be suppressed.</param>
            <param name="isStable">Whether instrumentation is considered stable. When false, experimental feature flag controls if tracing is enabled.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Azure.Core.FixedDelayWithNoJitterStrategy">
            <summary>
            A delay strategy that uses a fixed delay with no jitter applied. This is used by data plane LROs.
            </summary>
        </member>
        <member name="T:Azure.Core.OperationInternal">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternal.Succeeded(Azure.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.#ctor(Azure.Core.IOperation,Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy"> The delay strategy to use. Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="T:Azure.Core.IOperation">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
        </member>
        <member name="M:Azure.Core.IOperation.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />
            don't need to be updated. Operation-specific properties, such as "<c>CreateOn</c>" or "<c>LastModified</c>",
            must be manually updated by the operation implementing this method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&gt; IOperation.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState.Failure(response.GetRawResponse());<br />
                return OperationState.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationState.Success(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. If left <c>null</c>,
            a default exception is created based on the <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.RawResponse">
            <summary>
            The last HTTP response received from the server. Its update already handled in calls to "<c>UpdateStatus</c>" and
            "<c>WaitForCompletionAsync</c>", but custom methods not supported by this class, such as "<c>CancelOperation</c>",
            must update it as well.
            <example>Usage example:
            <code>
              public Response GetRawResponse() =&gt; _operationInternal.RawResponse;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.HasCompleted">
            <summary>
            Returns <c>true</c> if the long-running operation has completed.
            <example>Usage example:
            <code>
              public bool HasCompleted =&gt; _operationInternal.HasCompleted;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&gt; UpdateStatusAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.UpdateStatusAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public Response UpdateStatus(CancellationToken cancellationToken) =&gt; _operationInternal.UpdateStatus(cancellationToken);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server. <strong></strong></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal`1">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation`1" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal`1" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal`1" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.HasValue" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.Value" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Succeeded(Azure.Response,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="value">The final result of the long-running operation.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.#ctor(Azure.Core.IOperation{`0},Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal`1" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation`1" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation`1" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used.
                Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.HasValue">
            <summary>
            Returns <c>true</c> if the long-running operation completed successfully and has produced a final result.
            <example>Usage example:
            <code>
              public bool HasValue =&gt; _operationInternal.HasValue;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.Value">
            <summary>
            The final result of the long-running operation.
            <example>Usage example:
            <code>
              public T Value =&gt; _operationInternal.Value;
            </code>
            </example>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation has not completed yet.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />, which takes into account any retry-after header that is returned
            from the server.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.IOperation`1">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal`1" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.IOperation`1.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal`1" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> or
            <see cref="P:Azure.Core.OperationInternal`1.Value" />, don't need to be updated. Operation-specific properties, such
            as "<c>CreateOn</c>" or "<c>LastModified</c>", must be manually updated by the operation implementing this
            method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&lt;T&gt;&gt; IOperation&lt;T&gt;.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState&lt;T&gt;.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState&lt;T&gt;.Failure(response.GetRawResponse());<br />
                return OperationState&lt;T&gt;.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState`1" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState`1">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal`1" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="value">The final result of the long-running operation.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> or <paramref name="value" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. The same exception will be thrown when
            <see cref="P:Azure.Core.OperationInternal`1.Value" /> is called. If left <c>null</c>, a default exception is created based on the
            <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="T:Azure.Core.OperationPoller">
            <summary>
            Implementation of LRO polling logic.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            There are cases that operation id is not available, we return "NOT_SET" for unavailable operation id.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.Core.SequentialDelayStrategy">
            <summary>
            A delay strategy that uses a fixed sequence of delays with no jitter applied. This is used by management LROs.
            </summary>
        </member>
        <member name="P:Azure.NoValueResponse`1.HasValue">
            <summary>
            Gets a value indicating whether the current instance has a valid value of its underlying type.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Azure.TableClientBuilderExtensions">
            <summary>
            Extension methods to add <see cref="T:Azure.Data.Tables.TableClientOptions" /> client to clients builder.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.TableClientBuilderExtensions.AddTableServiceClient``1(``0,System.String)">
            <summary>
            Registers a <see cref="T:Azure.Data.Tables.TableServiceClient" /> instance with the provided <paramref name="connectionString" />
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.TableClientBuilderExtensions.AddTableServiceClient``1(``0,System.Uri)">
            <summary>
            Registers a <see cref="T:Azure.Data.Tables.TableServiceClient" /> instance with the provided <paramref name="serviceUri" />
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.TableClientBuilderExtensions.AddTableServiceClient``1(``0,System.Uri,Azure.Data.Tables.TableSharedKeyCredential)">
            <summary>
            Registers a <see cref="T:Azure.Data.Tables.TableServiceClient" /> instance with the provided <paramref name="serviceUri" /> and <paramref name="sharedKeyCredential" />
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.TableClientBuilderExtensions.AddTableServiceClient``2(``0,``1)">
            <summary>
            Registers a <see cref="T:Azure.Data.Tables.TableServiceClient" /> instance with connection options loaded from the provided <paramref name="configuration" /> instance.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute">
            <summary>
            Indicates that the specified method requires the ability to generate new code at runtime,
            for example through <see cref="N:System.Reflection" />.
            </summary>
            <remarks>
            This allows tools to understand which methods are unsafe to call when compiling ahead of time.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute" /> class
            with the specified message.
            </summary>
            <param name="message">
            A message that contains information about the usage of dynamic code.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.Message">
            <summary>
            Gets a message that contains information about the usage of dynamic code.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.Url">
            <summary>
            Gets or sets an optional URL that contains more information about the method,
            why it requires dynamic code, and what options a consumer has to deal with it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute">
            <summary>
            Indicates that the specified method requires dynamic access to code that is not referenced
            statically, for example through <see cref="N:System.Reflection" />.
            </summary>
            <remarks>
            This allows tools to understand which methods are unsafe to call when removing unreferenced
            code from an application.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute" /> class
            with the specified message.
            </summary>
            <param name="message">
            A message that contains information about the usage of unreferenced code.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.Message">
            <summary>
            Gets a message that contains information about the usage of unreferenced code.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.Url">
            <summary>
            Gets or sets an optional URL that contains more information about the method,
            why it requires unreferenced code, and what options a consumer has to deal with it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
            <summary>
            Suppresses reporting of a specific rule violation, allowing multiple suppressions on a
            single code artifact.
            </summary>
            <remarks>
            <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" /> is different than
            <see cref="T:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute" /> in that it doesn't have a
            <see cref="T:System.Diagnostics.ConditionalAttribute" />. So it is always preserved in the compiled assembly.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" />
            class, specifying the category of the tool and the identifier for an analysis rule.
            </summary>
            <param name="category">The category for the attribute.</param>
            <param name="checkId">The identifier of the analysis rule the attribute applies to.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category">
            <summary>
            Gets the category identifying the classification of the attribute.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category" /> property describes the tool or tool analysis category
            for which a message suppression attribute applies.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId">
            <summary>
            Gets the identifier of the analysis tool rule to be suppressed.
            </summary>
            <remarks>
            Concatenated together, the <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category" /> and <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId" />
            properties form a unique check identifier.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Scope">
            <summary>
            Gets or sets the scope of the code that is relevant for the attribute.
            </summary>
            <remarks>
            The Scope property is an optional argument that specifies the metadata scope for which
            the attribute is relevant.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target">
            <summary>
            Gets or sets a fully qualified path that represents the target of the attribute.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target" /> property is an optional argument identifying the analysis target
            of the attribute. An example value is "System.IO.Stream.ctor():System.Void".
            Because it is fully qualified, it can be long, particularly for targets such as parameters.
            The analysis tool user interface should be capable of automatically formatting the parameter.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId">
            <summary>
            Gets or sets an optional argument expanding on exclusion criteria.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId" /> property is an optional argument that specifies additional
            exclusion where the literal metadata target is not sufficiently precise. For example,
            the <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" /> cannot be applied within a method,
            and it may be desirable to suppress a violation against a statement in the method that will
            give a rule violation, but not against all statements in the method.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Justification">
            <summary>
            Gets or sets the justification for suppressing the code analysis message.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute">
            <summary>
            States a dependency that one member has on another.
            </summary>
            <remarks>
            This can be used to inform tooling of a dependency that is otherwise not evident purely from
            metadata and IL, for example a member relied on via reflection.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on the same type as the consumer.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on a <see cref="T:System.Type" />.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
            <param name="type">The <see cref="T:System.Type" /> containing <paramref name="memberSignature" />.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on a type in an assembly.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
            <param name="typeName">The full name of the type containing the specified member.</param>
            <param name="assemblyName">The assembly name of the type containing the specified member.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified types of members on a <see cref="T:System.Type" />.
            </summary>
            <param name="memberTypes">The types of members depended on.</param>
            <param name="type">The <see cref="T:System.Type" /> containing the specified members.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified types of members on a type in an assembly.
            </summary>
            <param name="memberTypes">The types of members depended on.</param>
            <param name="typeName">The full name of the type containing the specified members.</param>
            <param name="assemblyName">The assembly name of the type containing the specified members.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature">
            <summary>
            Gets the signature of the member depended on.
            </summary>
            <remarks>
            Either <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature" /> must be a valid string or <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes" />
            must not equal <see cref="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None" />, but not both.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes">
            <summary>
            Gets the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" /> which specifies the type
            of members depended on.
            </summary>
            <remarks>
            Either <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature" /> must be a valid string or <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes" />
            must not equal <see cref="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None" />, but not both.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type">
            <summary>
            Gets the <see cref="T:System.Type" /> containing the specified member.
            </summary>
            <remarks>
            If neither <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type" /> nor <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> are specified,
            the type of the consumer is assumed.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName">
            <summary>
            Gets the full name of the type containing the specified member.
            </summary>
            <remarks>
            If neither <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type" /> nor <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> are specified,
            the type of the consumer is assumed.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.AssemblyName">
            <summary>
            Gets the assembly name of the specified type.
            </summary>
            <remarks>
            <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.AssemblyName" /> is only valid when <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> is specified.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Condition">
            <summary>
            Gets or sets the condition in which the dependency is applicable, e.g. "DEBUG".
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute">
             <summary>
             Indicates that certain members on a specified <see cref="T:System.Type" /> are accessed dynamically,
             for example through <see cref="N:System.Reflection" />.
             </summary>
             <remarks>
             This allows tools to understand which members are being accessed during the execution
             of a program.
            
             This attribute is valid on members whose type is <see cref="T:System.Type" /> or <see cref="T:System.String" />.
            
             When this attribute is applied to a location of type <see cref="T:System.String" />, the assumption is
             that the string represents a fully qualified type name.
            
             When this attribute is applied to a class, interface, or struct, the members specified
             can be accessed dynamically on <see cref="T:System.Type" /> instances returned from calling
             <see cref="M:System.Object.GetType" /> on instances of that class, interface, or struct.
            
             If the attribute is applied to a method it's treated as a special case and it implies
             the attribute should be applied to the "this" parameter of the method. As such the attribute
             should only be used on instance methods of types assignable to System.Type (or string, but no methods
             will use it there).
             </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute" /> class
            with the specified member types.
            </summary>
            <param name="memberTypes">The types of members dynamically accessed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute.MemberTypes">
            <summary>
            Gets the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" /> which specifies the type
            of members dynamically accessed.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes">
             <summary>
             Specifies the types of members that are dynamically accessed.
            
             This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a
             bitwise combination of its member values.
             </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None">
            <summary>
            Specifies no members.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor">
            <summary>
            Specifies the default, parameterless public constructor.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors">
            <summary>
            Specifies all public constructors.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicConstructors">
            <summary>
            Specifies all non-public constructors.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicMethods">
            <summary>
            Specifies all public methods.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicMethods">
            <summary>
            Specifies all non-public methods.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields">
            <summary>
            Specifies all public fields.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicFields">
            <summary>
            Specifies all non-public fields.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicNestedTypes">
            <summary>
            Specifies all public nested types.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicNestedTypes">
            <summary>
            Specifies all non-public nested types.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties">
            <summary>
            Specifies all public properties.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicProperties">
            <summary>
            Specifies all non-public properties.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicEvents">
            <summary>
            Specifies all public events.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicEvents">
            <summary>
            Specifies all non-public events.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.Interfaces">
            <summary>
            Specifies all interfaces implemented by the type.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All">
            <summary>
            Specifies all members.
            </summary>
        </member>
        <member name="P:Azure.Data.Tables.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.Data.Tables.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="M:Azure.Data.Tables.ChangeTrackingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Data.Tables.ChangeTrackingList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Data.Tables.TableEntity.System#Collections#Generic#IDictionary{System#String@System#Object}#Values">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary><returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:Azure.Data.Tables.TableEntity.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
            <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary><returns><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary><param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param><returns><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary><param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param><param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param><exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception><exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param><returns><see langword="true" /> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Data.Tables.TableEntity.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Data.Tables.Queryable.ReferenceEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
            <summary>Determines whether the specified objects are equal.</summary><param name="x">The first object to compare.</param><param name="y">The second object to compare.</param><returns><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</returns><exception cref="T:System.ArgumentException"><paramref name="x" /> and <paramref name="y" /> are of different types and neither one can handle comparisons with the other.</exception>
        </member>
        <member name="M:Azure.Data.Tables.Queryable.ReferenceEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
            <summary>Returns a hash code for the specified object.</summary><param name="obj">The <see cref="T:System.Object" /> for which a hash code is to be returned.</param><returns>A hash code for the specified object.</returns><exception cref="T:System.ArgumentNullException">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
